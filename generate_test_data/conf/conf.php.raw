<?php

/**
 * 配置文件
 *
 * @author axu
 * @version $Id$
 * @copyright Centrin, 10 July, 2014
 * @package default
 **/

class Config
{
    /**
     * 获取元数据信息函数
     * 
     * 'xxx' => array( // 属性名称
            'rate' => '0.03', // 概率（%），有%概率出现'rateArr'中的值
            'rateArr' => array('13994162165', '13950508345'),
            'cellNumber' => 1, // 属性有多少个值
            'metaValSeparator' => '', // 每个值之间分隔符
            'cellScope' => array( // 每个值由几个元素组成,按照数组先后设置每一个元素
                array('int' => '1,1'), // 整形随机取两个数中的一个数字
                array('float' => '0,1'), // 整形随机取两个数中的一个浮点数
                array('string' => array('呼出','呼入',)), // 字符串数组中，随机取一个值
                array('date' => '20130101,20131231'), // 设置两个时间","分隔，获取两个时间中的随机一个日期
                array('oneDay' => '20130101'), // 取得该日期中随机一个时刻
            ),
            'cellValSeparator' => '', // 每个值中元素分割符
        ),
     */
    public static function getMetaInfo()
    {
        return array(
            'id' => array( // 属性名称
                'cellNumber' => 1, // 属性有多少个值
                'metaValSeparator' => '', // 每个值之间分隔符
                'cellScope' => array( // 每个值由几个元素组成,按照数组先后设置每一个元素
                    array('string' => array(
                    array('string' => array('t')),
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('string' => array('_')),
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('string' => array('_')),
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('string' => array('.mp3')), // 字符串数组中，随机取一个值
                    )),),
                'cellValSeparator' => '', // 每个值中元素分割符
            ),
            // 机构领域
            'area_of_job' => array( // 属性名称
                'cellNumber' => 1, // 属性有多少个值
                'metaValSeparator' => '', // 每个值之间分隔符
                'cellScope' => array( // 每个值由几个元素组成,按照数组先后设置每一个元素
                    array('string' => array(
                        'dy-sh', // 银行卡客服
                        'dy-gz', // 综合客服
                        'kf', // 电营处-广州-保险
                    )),),
                'cellValSeparator' => '', // 每个值中元素分割符
            ),
            // 文件名
            'filename' => array( // 属性名称
                'cellNumber' => 1, // 属性有多少个值
                'metaValSeparator' => '', // 每个值之间分隔符
                'cellScope' => array( // 每个值由几个元素组成,按照数组先后设置每一个元素
                    array('string' => array('t')),
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('string' => array('_')),
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('string' => array('_')),
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('string' => array('.mp3')), // 字符串数组中，随机取一个值
                ),
                'cellValSeparator' => '', // 每个值中元素分割符
            ),
            // 通话开始时间
            'start_time' => array( // 属性名称
                'cellNumber' => 1, // 属性有多少个值
                'metaValSeparator' => '', // 每个值之间分隔符
                'cellScope' => array( // 每个值由几个元素组成,按照数组先后设置每一个元素
                    array('date' => '20170101,20171231'), // 取得该日期中随机一个时刻
                ),
                'cellValSeparator' => '', // 每个值中元素分割符
            ),
            // 通话开始时间
            'end_time' => array( // 属性名称
                'cellNumber' => 1, // 属性有多少个值
                'metaValSeparator' => '', // 每个值之间分隔符
                'cellScope' => array( // 每个值由几个元素组成,按照数组先后设置每一个元素
                    array('date' => '20170101,20171231'), // 取得该日期中随机一个时刻
                ),
                'cellValSeparator' => '', // 每个值中元素分割符
            ),
            // 通话时长
            'duration' => array( // 属性名称
                'cellNumber' => 1, // 属性有多少个值
                'metaValSeparator' => '', // 每个值之间分隔符
                'cellScope' => array( // 每个值由几个元素组成,按照数组先后设置每一个元素
                    array('int' => '0,1000'), // 整形随机取两个数中的一个数字
                ),
                'cellValSeparator' => '', // 每个值中元素分割符
            ),
            // 通话号码
            'callnumber' => array( // 属性名称
                'rate' => '0.03',
                'rateArr' => array('013994162165', '913950508345', '013935517280', '913913531598', '013978901365', '013911074069', '013957807771', '913931762539', '013958704510', '013993139945'),
                'cellNumber' => 1, // 属性有多少个值
                'metaValSeparator' => '', // 每个值之间分隔符
                'cellScope' => array( // 每个值由几个元素组成,按照数组先后设置每一个元素
                    array('string' => array('0', '9')), // 字符串数组中，随机取一个值
                    array('int' => '1,1'), // 整形随机取两个数中的一个数字
                    array('int' => '3,3'), // 整形随机取两个数中的一个数字
                    array('int' => '9,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    ),
                'cellValSeparator' => '', // 每个值中元素分割符
            ),
            // 话务员工号
            'rep_no' => array( // 属性名称
              'cellNumber' => 1, // 属性有多少个值
                'metaValSeparator' => '', // 每个值之间分隔符
                'cellScope' => array( // 每个值由几个元素组成,按照数组先后设置每一个元素
                   array('string' => array(
                        '8000177653',
                        '8000129889',
                        '8000077396',
                        '8000050068',
                        '8000186416',
                        '8000058909',
                        '3199000064',
                        '8000153742',
                        '3199000012', 
                        '3199000033',
                    )),),
                'cellValSeparator' => '', // 每个值中元素分割符
            ),
            // 话务员组别
            'rep_group' => array( // 属性名称
                'cellNumber' => 1, // 属性有多少个值
                'metaValSeparator' => '', // 每个值之间分隔符
                'cellScope' => array( // 每个值由几个元素组成,按照数组先后设置每一个元素
                    array('string' => array(
                        '8000584986',
                        '8000541571',
                        '8000541579',
                        '8000584981',
                        '8000585001',
                        '3199000033/3199000012',
                        '8000177653/8000129889',
                        '8000077396/8000050068',
                        '8000186416/8000058909', 
                        '3199000064/8000153742',
                    )),),
                'cellValSeparator' => '', // 每个值中元素分割符
            ),
            // 通道（分机）号
            'agent_no' => array( // 属性名称
                'cellNumber' => 1, // 属性有多少个值
                'metaValSeparator' => '', // 每个值之间分隔符
                'cellScope' => array( // 每个值由几个元素组成,按照数组先后设置每一个元素
                    array('string' => array(
                        '76529',
                        '76535',
                        '76071',
                        '76005',
                        '76112',
                        '76108',
                        '76123',
                        '76174',
                        '76184', 
                    )),),
                'cellValSeparator' => '', // 每个值中元素分割符
            ),
            // 客户卡号
            'account_no' => array( // 属性名称
                'cellNumber' => 1, // 属性有多少个值
                'metaValSeparator' => '', // 每个值之间分隔符
                'cellScope' => array( // 每个值由几个元素组成,按照数组先后设置每一个元素
                    array('int' => '6225561213406980,6225561213407981'), // 整形随机取两个数中的一个数字
                ),
                'cellValSeparator' => '', // 每个值中元素分割符
            ),
            // 话务员团队
            'rep_team' => array( // 属性名称
                'cellNumber' => 1, // 属性有多少个值
                'metaValSeparator' => '', // 每个值之间分隔符
                'cellScope' => array( // 每个值由几个元素组成,按照数组先后设置每一个元素
                    array('string' => array(
                        '焦单单', 
                        '王庆纬', 
                        '杨莹莹',
                        '刘野',
                        '高赛',
                        '何莉',
                        '王志红',
                    )),),
                'cellValSeparator' => '', // 每个值中元素分割符
            ),
            // 通话类型
            'calltype' => array( // 属性名称
                'cellNumber' => 1, // 属性有多少个值
                'metaValSeparator' => '', // 每个值之间分隔符
                'cellScope' => array( // 每个值由几个元素组成,按照数组先后设置每一个元素
                    array('string' => array(
                        '呼出',
                        '呼入',)), // 字符串数组中，随机取一个值
                    ),
                'cellValSeparator' => '', // 每个值中元素分割符
            ),
            // 录音号
            'number_of_record' => array( // 属性名称
                'cellNumber' => 1, // 属性有多少个值
                'metaValSeparator' => '', // 每个值之间分隔符
                'cellScope' => array( // 每个值由几个元素组成,按照数组先后设置每一个元素
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('string' => array('-')),
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('string' => array('-')),
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('string' => array('-')),
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                ),
                'cellValSeparator' => '', // 每个值中元素分割符
            ),
            // 场地
            'region' => array( // 属性名称
                'cellNumber' => 1, // 属性有多少个值
                'metaValSeparator' => '', // 每个值之间分隔符
                'cellScope' => array( // 每个值由几个元素组成,按照数组先后设置每一个元素
                    array('string' => array(
                        '95590呼叫中心-报案和咨询', 
                        '95590呼叫中心-报案和咨询-上海报案二区', 
                        '95590呼叫中心-报案和咨询-上海报案三区',
                        '95590呼叫中心-报案和咨询-上海报案一区',
                        '95590呼叫中心-报案和咨询-上海咨询区',
                    )),),
                'cellValSeparator' => '', // 每个值中元素分割符
            ),
            // 项目队列
            'project_list' => array( // 属性名称
                'cellNumber' => 1, // 属性有多少个值
                'metaValSeparator' => '', // 每个值之间分隔符
                'cellScope' => array( // 每个值由几个元素组成,按照数组先后设置每一个元素
                    array('string' => array(
                        '95590呼叫中心-报案和咨询', 
                        '上海报案二区', 
                        '上海报案三区',
                        '上海报案一区',
                        '上海咨询区',
                    )),),
                'cellValSeparator' => '', // 每个值中元素分割符
            ),
            // 满意度
            'satisfaction' => array( // 属性名称
                'cellNumber' => 1, // 属性有多少个值
                'metaValSeparator' => '', // 每个值之间分隔符
                'cellScope' => array( // 每个值由几个元素组成,按照数组先后设置每一个元素
                    array('string' => array(
                        //'昌岗', 
                        '暂无打分情况', 
                    )),),
                'cellValSeparator' => '', // 每个值中元素分割符
            ),
            // 质检员工号
            'qa_no' => array( // 属性名称
                'cellNumber' => 1, // 属性有多少个值
                'metaValSeparator' => '', // 每个值之间分隔符
                'cellScope' => array( // 每个值由几个元素组成,按照数组先后设置每一个元素
                    array('string' => array(
                        '8000064733', 
                        '8000060390', 
                        '3199000032',
                        '8000091840',
                        '3199000024',
                    )),),
                'cellValSeparator' => '', // 每个值中元素分割符
            ),
            // 话后小结组别
            'summarize_group' => array( // 属性名称
                'cellNumber' => 1, // 属性有多少个值
                'metaValSeparator' => '', // 每个值之间分隔符
                'cellScope' => array( // 每个值由几个元素组成,按照数组先后设置每一个元素
                    array('string' => array(
                        '报案和咨询', 
                        '95590呼叫中心', 
                    )),),
                'cellValSeparator' => '', // 每个值中元素分割符
            ),
            // 小结分类（保单号）
            'summarize_class' => array( // 属性名称
            'cellNumber' => 1, // 属性有多少个值
                'metaValSeparator' => '', // 每个值之间分隔符
                'cellScope' => array( // 每个值由几个元素组成,按照数组先后设置每一个元素
                    array('string' => array(
                        'RDDB320170000007809684', 
                        'RDDG320170000007809686', 
                        'RDDC320170000007809687', 
                        'RDDG320170000007809689',
                        'RDDG320170000007809688',
                        'RDDG320170000007809685',
                        'RDDG320170000007809680',
                        'RDDG320170000007809681',
                        'RDDG320170000007809682',
                        'RDDG320170000007809683',
                        'RDDG320170000007809690',
                        'RDDG320170000007809691',
                        'RDDG320170000007809692',
                        'RDDG320170000007809693',
                        'RDDG320170000007809694',
                        'RDDG320170000007809695',
                        'RDDG320170000007809696',
                        'RDDG320170000007809697',
                        'RDDG320170000007809698',
                        'RDDG320170000007809699',
                        'RDDG320170000007809700',
                        'RDDG320170000007809701',
                        'RDDG320170000007809702',
                        'RDDG320170000007809703',
                        'RDDG320170000007809704',
                    )),),
                'cellValSeparator' => '', // 每个值中元素分割符
            ),
            // 小结项目
            'summarize_project' => array( // 属性名称
                'cellNumber' => 1, // 属性有多少个值
                'metaValSeparator' => '', // 每个值之间分隔符
                'cellScope' => array( // 每个值由几个元素组成,按照数组先后设置每一个元素
                    array('string' => array(
                        '587', 
                        '588',  
                        '585',
                        '586',
                        '589',
                    )),),
                'cellValSeparator' => '', // 每个值中元素分割符
            ),
            // 小结内容
            'summarize_content' => array( // 属性名称
                'cellNumber' => 1, // 属性有多少个值
                'metaValSeparator' => '', // 每个值之间分隔符
                'cellScope' => array( // 每个值由几个元素组成,按照数组先后设置每一个元素
                    array('string' => array(
                        'RDDB320170000007809684', 
                        'RDDG320170000007809686', 
                        'RDDC320170000007809687', 
                        'RDDG320170000007809689',
                        'RDDG320170000007809688',
                        'RDDG320170000007809685',
                        'RDDG320170000007809680',
                        'RDDG320170000007809681',
                        'RDDG320170000007809682',
                        'RDDG320170000007809683',
                        'RDDG320170000007809690',
                        'RDDG320170000007809691',
                        'RDDG320170000007809692',
                        'RDDG320170000007809693',
                        'RDDG320170000007809694',
                        'RDDG320170000007809695',
                        'RDDG320170000007809696',
                        'RDDG320170000007809697',
                        'RDDG320170000007809698',
                        'RDDG320170000007809699',
                        'RDDG320170000007809700',
                        'RDDG320170000007809701',
                        'RDDG320170000007809702',
                        'RDDG320170000007809703',
                        'RDDG320170000007809704',
                    )),),
                'cellValSeparator' => '', // 每个值中元素分割符
            ),
            // 是否质检
            'is_qa' => array( // 属性名称
                'cellNumber' => 1, // 属性有多少个值
                'metaValSeparator' => '', // 每个值之间分隔符
                'cellScope' => array( // 每个值由几个元素组成,按照数组先后设置每一个元素
                    array('string' => array(
                        'Y', 
                        'N', 
                    )),),
                'cellValSeparator' => '', // 每个值中元素分割符
            ),
            // 是否提交案例库
            'to_warehouse' => array( // 属性名称
                'cellNumber' => 1, // 属性有多少个值
                'metaValSeparator' => '', // 每个值之间分隔符
                'cellScope' => array( // 每个值由几个元素组成,按照数组先后设置每一个元素
                    array('string' => array(
                        'Y', 
                        'N', 
                    )),),
                'cellValSeparator' => '', // 每个值中元素分割符
            ),
            // 是否提交学习跟进
            'to_improvement' => array( // 属性名称
                'cellNumber' => 1, // 属性有多少个值
                'metaValSeparator' => '', // 每个值之间分隔符
                'cellScope' => array( // 每个值由几个元素组成,按照数组先后设置每一个元素
                    array('string' => array(
                        'Y', 
                        'N', 
                    )),),
                'cellValSeparator' => '', // 每个值中元素分割符
            ),
            // 是否异常录音
            'isnormality' => array( // 属性名称
                'cellNumber' => 1, // 属性有多少个值
                'metaValSeparator' => '', // 每个值之间分隔符
                'cellScope' => array( // 每个值由几个元素组成,按照数组先后设置每一个元素
                    array('string' => array(
                        'Y', 
                        'N', 
                    )),),
                'cellValSeparator' => '', // 每个值中元素分割符
            ),
            // 业务类型
            'type_of_service' => array( // 属性名称
                'cellNumber' => 1, // 属性有多少个值
                'metaValSeparator' => '', // 每个值之间分隔符
                'cellScope' => array( // 每个值由几个元素组成,按照数组先后设置每一个元素
                    array('string' => array(
                        '手机银行', 
                        '满意度',
                        '报案',
                        '西安中心',
                        '产品交易',
                        '综合业务',
                   )),),
                'cellValSeparator' => '', // 每个值中元素分割符
            ),
            // 数据状态一级原因
            'data_status' => array( // 属性名称
                'cellNumber' => 1, // 属性有多少个值
                'metaValSeparator' => '', // 每个值之间分隔符
                'cellScope' => array( // 每个值由几个元素组成,按照数组先后设置每一个元素
                    array('string' => array(
                        'a成功',
                        'b拒绝',
                        'f跟进',
                        'g联系失败',
                        'o其它',
                        'm错误',
                        't非财智金业务',                          
                    )),),
                'cellValSeparator' => '', // 每个值中元素分割符
            ),
            // 数据状态二级原因
            'data_status_2' => array( // 属性名称
                'cellNumber' => 1, // 属性有多少个值
                'metaValSeparator' => '', // 每个值之间分隔符
                'cellScope' => array( // 每个值由几个元素组成,按照数组先后设置每一个元素
                    array('string' => array('A', 'B', 'F',)),
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                ),
                'cellValSeparator' => '', // 每个值中元素分割符
            ),
            // 数据状态三级原因
            'data_status_3' => array( // 属性名称
                'cellNumber' => 1, // 属性有多少个值
                'metaValSeparator' => '', // 每个值之间分隔符
                'cellScope' => array(
                    array('string' => array('无',)),
                ),
                'cellValSeparator' => '', // 每个值中元素分割符
            ),
            // 所属组长
            'group_leader' => array( // 属性名称
                'cellNumber' => 1, // 属性有多少个值
                'metaValSeparator' => '', // 每个值之间分隔符
                'cellScope' => array( // 每个值由几个元素组成,按照数组先后设置每一个元素
                        array('string' => array('95590呼叫中心')),
                        array('string' => array('A', 'B', 'C')),
                        array('int' => '0,9'), // 整形随机取两个数中的一个数字
                        array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    ),
                'cellValSeparator' => '', // 每个值中元素分割符
            ),
            // 客户证件号
            'cust_id' => array( // 属性名称
                'cellNumber' => 1, // 属性有多少个值
                'metaValSeparator' => '', // 每个值之间分隔符
                'cellScope' => array( // 每个值由几个元素组成,按照数组先后设置每一个元素
                    array('int' => '10003,500000'), // 整形随机取两个数中的一个数字
                ),
                'cellValSeparator' => '', // 每个值中元素分割符
            ),
            // 客户姓名
            'cust_name' => array( // 属性名称
                'cellNumber' => 1, // 属性有多少个值
                'metaValSeparator' => '', // 每个值之间分隔符
                'cellScope' => array( // 每个值由几个元素组成,按照数组先后设置每一个元素
                    array('string' => array(
                        '曾文聪', 
                        '邓华', 
                        '段建新',
                        '王溪',
                        '李美丽',
                        '王洋',
                        '王建昌',
                    )),),
                'cellValSeparator' => '', // 每个值中元素分割符
            ),
            // 信审处理号（营销案件ID）
            'audit_no' => array( // 属性名称
                'cellNumber' => 1, // 属性有多少个值
                'metaValSeparator' => '', // 每个值之间分隔符
                'cellScope' => array( // 每个值由几个元素组成,按照数组先后设置每一个元素
                    array('string' => array(
                        'RDDB320170000007809684', 
                        'RDDG320170000007809686', 
                        'RDDC320170000007809687', 
                        'RDDG320170000007809689',
                        'RDDG320170000007809688',
                        'RDDG320170000007809685',
                        'RDDG320170000007809680',
                        'RDDG320170000007809681',
                        'RDDG320170000007809682',
                        'RDDG320170000007809683',
                        'RDDG320170000007809690',
                        'RDDG320170000007809691',
                        'RDDG320170000007809692',
                        'RDDG320170000007809693',
                        'RDDG320170000007809694',
                        'RDDG320170000007809695',
                        'RDDG320170000007809696',
                        'RDDG320170000007809697',
                        'RDDG320170000007809698',
                        'RDDG320170000007809699',
                        'RDDG320170000007809700',
                        'RDDG320170000007809701',
                        'RDDG320170000007809702',
                        'RDDG320170000007809703',
                        'RDDG320170000007809704',
                    )),),
                'cellValSeparator' => '', // 每个值中元素分割符
            ),
            // 电话类型
            'phone_type' => array( // 属性名称
                'cellNumber' => 1, // 属性有多少个值
                'metaValSeparator' => '', // 每个值之间分隔符
                'cellScope' => array( // 每个值由几个元素组成,按照数组先后设置每一个元素
                    array('string' => array(
                        '家庭电话', 
                        '办公电话', 
                        '手机',
                        '其他',
                    )),),
                'cellValSeparator' => '', // 每个值中元素分割符
            ),
            // 推荐电核类型
            'verify_type' => array( // 属性名称
                'cellNumber' => 1, // 属性有多少个值
                'metaValSeparator' => '', // 每个值之间分隔符
                'cellScope' => array( // 每个值由几个元素组成,按照数组先后设置每一个元素
                    array('string' => array(
                        '家庭电话', 
                        '办公电话', 
                        '手机',
                        '其他',
                    )),),
                'cellValSeparator' => '', // 每个值中元素分割符
            ),
            // 坐席姓名
            'staff_name' => array( // 属性名称
                'cellNumber' => 1, // 属性有多少个值
                'metaValSeparator' => '', // 每个值之间分隔符
                'cellScope' => array( // 每个值由几个元素组成,按照数组先后设置每一个元素
                    array('string' => array(
                        '曾文聪', 
                        '邓华', 
                        '段建新',
                        '王溪',
                        '徐雄威',
                        '王洋',
                        '王建昌',
                    )),),
                'cellValSeparator' => '', // 每个值中元素分割符
            ),
            // 业务类型
            'bu_type' => array( // 属性名称
                'cellNumber' => 1, // 属性有多少个值
                'metaValSeparator' => '', // 每个值之间分隔符
                'cellScope' => array( // 每个值由几个元素组成,按照数组先后设置每一个元素
                    array('string' => array(
                        '新发卡', 
                        '调额', 
                        '报案',
                    )),),
                'cellValSeparator' => '', // 每个值中元素分割符
            ),
            // 业务规则提示信息
            'rule_prompt' => array(
                'cellNumber' => 1, 
                'metaValSeparator' => '', 
                'cellScope' => array( 
                    array('int' => '0,9'), 
                    array('int' => '0,9'), 
                    array('int' => '0,9'), 
                    array('int' => '0,9'), 
                    array('int' => '0,9'), 
                    array('int' => '0,9'), 
                ),
                'cellValSeparator' => '', 
            ),
            'years' => array( // 属性名称
                'cellNumber' => 1, // 属性有多少个值
                'metaValSeparator' => '', // 每个值之间分隔符
                'cellScope' => array( // 每个值由几个元素组成,按照数组先后设置每一个元素
                    array('int' => '2000,2020'), // 整形随机取两个数中的一个数字
                ),
                'cellValSeparator' => '', // 每个值中元素分割符
            ),
            'months' => array( // 属性名称
                'cellNumber' => 1, // 属性有多少个值
                'metaValSeparator' => '', // 每个值之间分隔符
                'cellScope' => array( // 每个值由几个元素组成,按照数组先后设置每一个元素
                    array('int' => '1,12'), // 整形随机取两个数中的一个数字
                ),
                'cellValSeparator' => '', // 每个值中元素分割符
            ),
            'days' => array( // 属性名称
                'cellNumber' => 1, // 属性有多少个值
                'metaValSeparator' => '', // 每个值之间分隔符
                'cellScope' => array( // 每个值由几个元素组成,按照数组先后设置每一个元素
                    array('int' => '1,31'), // 整形随机取两个数中的一个数字
                ),
                'cellValSeparator' => '', // 每个值中元素分割符
            ),
            'path' => array( // 属性名称
                'cellNumber' => 1, // 属性有多少个值
                'metaValSeparator' => '', // 每个值之间分隔符
                'cellScope' => array( // 每个值由几个元素组成,按照数组先后设置每一个元素
                    array('string' => array(
                        '/root',
                        '/usr',
                        '/etc',
                        '/home')), // 字符串数组中，随机取一个值
                    array('string' => array(
                        '/bin',
                        '/dev',
                        '/lib')), // 字符串数组中，随机取一个值
                    array('string' => array(
                        '/data1',
                        '/data2',
                        '/data3')), // 字符串数组中，随机取一个值
                ),
                'cellValSeparator' => '', // 每个值中元素分割符
            ),
            'filesize' => array( // 属性名称
                'cellNumber' => 1, // 属性有多少个值
                'metaValSeparator' => '', // 每个值之间分隔符
                'cellScope' => array( // 每个值由几个元素组成,按照数组先后设置每一个元素
                    array('int' => '500000,10000000'), // 整形随机取两个数中的一个数字
                ),
                'cellValSeparator' => '', // 每个值中元素分割符
            ),
            'fileunique' => array( // 属性名称
                'cellNumber' => 1, // 属性有多少个值
                'metaValSeparator' => '', // 每个值之间分隔符
                'cellScope' => array( // 每个值由几个元素组成,按照数组先后设置每一个元素
                    array('string' => array('t')),
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('string' => array('_')),
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('string' => array('_')),
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('string' => array('.mp3')), // 字符串数组中，随机取一个值
                ),
                'cellValSeparator' => '', // 每个值中元素分割符
            ),
            'handledfilename' => array( // 属性名称
                'cellNumber' => 1, // 属性有多少个值
                'metaValSeparator' => '', // 每个值之间分隔符
                'cellScope' => array( // 每个值由几个元素组成,按照数组先后设置每一个元素
                    array('string' => array('t')),
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('string' => array('_')),
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('string' => array('_')),
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,9'), // 整形随机取两个数中的一个数字
                    array('string' => array('.mp3')), // 字符串数组中，随机取一个值
                ),
                'cellValSeparator' => '', // 每个值中元素分割符
            ),
            'plaintexta' => array( // 属性名称
                'cellNumber' => 1, // 属性有多少个值
                'metaValSeparator' => '', // 每个值之间分隔符
                'cellScope' => array( // 每个值由几个元素组成,按照数组先后设置每一个元素
                    array('string' => array(
                        '搜狐体育讯 北京时间4月21日晚22点,在英超联赛第35轮的一场比赛中,曼城客场迎战联赛倒数第一的沃特福德,最终凭借瓦塞尔和普里什金分别为各自球队的进球,双方曼城客场和沃特福德1-01握手言和。上轮迎战阿森纳受伤下场的孙继海,本场比赛再次出现在首发阵容中,在孙继海复出之后参加了球队全部9轮联赛,其中8场比赛都是首发出场,在曼城主力位置不可撼动。比赛第85分钟孙继海被替换下场,还有伤病在身的孙继海显然是得到了教练的保护。 在本轮比赛之前曼城积41分,排在联赛第13位,本赛季已无降级之忧,曼城近一阶段战绩比较出色,一扫前一阶段联赛5连败的颓势,近6轮比赛取得11分,也正是这样的表现使得曼城一跃脱离降级区。反观沃特福德,本赛季表现及其糟糕,34轮联赛过后只积23分,排在倒数第一位,目前为止也只赢得了4场比赛的胜利,共进了25球,和曼城差不多,但是却失掉了56球,防守是球队主要的问题。 在英超的历史上,两队总共有23次交锋,曼城12胜6平5负占据优势,但是在沃特福德主场维卡里吉路球场,曼城并没有多少优势,11次交锋4胜4平3负,基本上打成了平手。本场比赛曼城的单箭头,能对沃特福德脆弱的防线形成多大威胁,将左右比赛的战局。中国球员孙继海再次出现在右前卫上,到底又会有怎样的发挥值得期待。 比赛开始之后,曼城表现比较积极,率先发动攻势。第一分钟,马洪对巴顿犯规,曼城获得任意球,哈曼将球打进禁区,被回防的马洪解围。第4分钟曼城再次获得前场任意球,哈曼再次将球发到禁区内,门将福斯特将球得到。第5分钟沃特福德获得角球机会,曼城门将伊萨克森将球解围。第10分钟,沃特福德获得射门机会,在禁区左肋12码处头球攻门,偏出。 曼城今天在防守中多采用造越位战术,沃特福德多次掉进越位陷阱。第19分钟,曼城再次获得前场任意球机会,哈曼第三次操刀,直接攻门被门将福斯特飞身救险。第24分钟,马龙·金再次越位,开场之后沃特福德已经三次越位。第24分钟,沃特福德后卫对巴顿犯规,曼城再次获得前场任意球,哈曼将球吊到禁区内,被后卫卡莱尔解围。第29分钟,瓦塞尔在进攻中和队员传跑没有形成默契,越位失去一次破门良机。第37分钟,瓦塞尔在前场犯规,福斯特将球直接吊到曼城禁区内,邓恩及时解围。 第38分钟,此前一直表现平淡的孙继海,在前场右路防守时手球犯规,沃特福德获得任意球机会,孙继海今天在右路功放表现一般,也许是受到了伤病的影响,而曼城在之前的比赛中也是一次射正都没有,今天曼城整体表现都不是很理想。第38分钟,沃特福德再次获得射门机会,布阿扎20码处的射门被伊萨克森得到。第42分钟,曼城获得前场任意球机会,哈曼将球打到禁区被后卫解围。 在上半场最后阶段曼城发起了一波进攻高潮,第44分钟,巴顿右路的角球被沃特福德后卫解围。第45分钟,孙继海在前场离球门25码处获得射门机会,大力低射从球门右边偏出。最后,上半场双方战成0-0. 易边再战,双方都没有对阵容作出调整。第48分钟,沃特福德获得角球机会,班古拉将球罚向禁区中路,哈曼将球解围。第53分钟沃特福德再次角球进攻,曼城回防的米勒将球解围。 第53分钟曼城终于迎来了首粒进球,瓦塞尔在在前场右侧离球门25米出起脚打门,球从右侧攻破了越过了福斯特的封堵,曼城客场1-0领先,曼城本场比赛第一脚打在门框范围内的射门,就得到一分,瓦塞尔也打进了本赛季个人第三粒进球。 进球之后曼城打得更加得心应手,逐渐开始控制场上局面,而沃特福德也没能组织起有效的攻势,场面开始变得异常沉闷。第55分钟,米勒对里纳尔迪犯规,沃特福德获得任意球,邓恩将球解围。第60分钟,哈曼对沃特福德班古拉恶意犯规,得到一张黄牌。 第75分钟沃特福德将比分扳平,下半场替补上场的普里什金建功,在禁区中路离球门12码处射门得手,场上比分1-1,双方再次回到同一起跑线。在另外一个赛场上,查尔顿在保级大战中,也被谢菲联顽强逼平,形势非常危急。第77分钟,巴顿在离球门12码处射门,被后卫挡住,之后巴顿在禁区线上传球,被班古拉解围。 第85分钟,曼城做出换人,孙继海被爱尔兰替换下场,这也是孙继海在近7场联赛中,首次因为战术调整而被替换下场,上次战术调整下场还是3月15日与切尔西的补赛中。 第87分钟,沃特福德再得破门良机,门前12码处射门从左侧偏出。第90分钟,萨马拉斯在进攻中越位,错失了最后一次得分机会。最终双方以1-1握手言和。 (风清扬) 沃特福德(433) 门将:26-福斯特 后卫:12-多伊利 、5-卡莱尔 、6-德梅里特 、11-鲍威尔 中场:20-班古拉 、7-弗朗西斯(24’15-卡巴) 、8-马洪 前锋:31-里纳尔迪(82’17-希图)、18-布阿扎、9-马龙·金 替补:16-理查德·李、23-马里亚帕 、17-希图 、15-卡巴、24-普里什金 曼城(451) 门将:1-伊萨克森 后卫:3-波尔、15-迪斯丁、22-邓恩、16-奥姆哈 中场:17-孙继海(85’7-爱尔兰)、33-约翰逊、8-巴顿、21-哈曼、24-比斯利(35’43-米勒) 前锋:11-瓦塞尔 替补:12-韦弗、7-爱尔兰、30-科拉迪、43-米勒、20-萨马拉斯 (责任编辑:Gedicht)',
                        '搜狐体育讯 北京时间4月21日济南消息 同长春亚泰比赛之前,本赛季的山东鲁能一直存在一种神奇的“亚冠定律”,即但凡亚冠联赛之前的联赛,球队均能在联赛中大比分获胜。 客场1-0战胜阿德莱德之前,球队5-2狂屠辽宁;主场2-1击败城南一和前,3-1战胜青岛;主场队越南隆安前夕,4-2轻取长沙金德。但就在球队即将前往越南出征亚冠之前,同长春亚泰1-1的结果打破了这一常规,若非韩鹏第81分钟的头球,球队甚至面临主场输球的尴尬。 对于这一亚冠定律的突然失灵,主教练图拨仍然坚持体能不是平局的诱因,塞尔维亚人将几乎所有的责任推给了中国足协安排的马来西亚主裁判克林斯汉。 之所以对裁判不满,很大程度上在于马来西亚裁判经常中断比赛和漏判了双方点球。上半场崔鹏和亚泰队员高建两次在禁区被放倒,按照双方的理解均应获得点球,但克林斯汉却对二人出示了黄牌,示意两人假摔。洋裁判的执法水平今天引起了很大争议,两边不讨好,少师高洪波同样对裁判颇有微辞,他表示,作为两支崇尚攻势足球的球队来说,在鲁能球场如此漂亮的草皮上没能打出精彩的比赛,应该说,主裁判经常中断比赛是一个重要原因。” 图拔赛后对马来西亚主裁进行了猛烈炮轰,他说:“目前的中超联赛中,鲁能和长春两只队伍都是崇尚进攻的队伍,目前也进球最多,双方完全有能力奉献精彩比赛。很遗憾,裁判的判罚标准影响了比赛的质量,这场比赛是一名外籍裁判来执法的,我相信足协请外籍比赛执法是想让比赛更加公正和公平,但是这种公平和公众最好不要建立在影响比赛质量的前提下,否则这样的比赛是没有意义的,今天裁判场上的表现却起到了相反的结果,左右了比赛的进程和结果。” 在王栋第43分钟利用任意球得分领先后,下半场图拔科维奇换上了三名国奥小将,加强进攻,但队员们在裁判判罚下情绪显得相当急躁,多次浪费得分机会,并比赛尾声出现了球员抽筋的现象,图拨谈到这一点时将责任同样归咎于主裁判的表现。他说:“今天的比赛中,对手的防守做的很出色,整只球队的退防很快,在得球后又迅速的转入进攻,这就要求我们的队员要进行更多的更长距离的往返跑动,这是球员体力透支的原因。我们的队员在比赛中表现出了一种急躁的情绪,但这种情绪更多的是由于裁判的判罚引起的。” 对1-1的比赛结果,图拨直言相当不满意。但他否认这场平局对于鲁能卫冕决心的影响。”对于本场比赛的平局,我当然是不满意的,我们比赛的目的就是要获得三分,回去后我们要好好分析,找出解决问题的办法。比赛要一场一场的踢,中超联赛才进行到第七轮,现在就谈联赛冠军归属还为时尚早。” 亚泰主帅高洪波对于平局的结果表示了接受,在暗讽裁判水平低下的同时,高洪波对鲁能周三的亚冠比赛进行了祝福。 (华奥星空 何醒发自济南) (责任编辑:迎迎)',
                        '搜狐体育讯 作为丁俊晖(丁俊晖博客,丁俊晖说吧)全球官方网站以及个人官方博客的承建商,搜狐在丁俊晖第一次斯诺克世锦赛之旅的过程中给与高度关注,并全方位地给网友们带来有关丁俊晖方方面面的报道。 其中,我们将每日对丁俊晖进行独家专访,让丁俊晖亲自向关心他的网友们讲述自己的世锦赛之路。今天,我们推出的是第四期: 搜狐体育:今天训练的情况如何? 丁俊晖:还可以吧,这些天都练得不错。 搜狐体育:明天你的比赛就要开始了,你觉得自己目前的状态调整到最好了么? 丁俊晖:应该还没有吧,我自己感觉是,还是看看比赛的时候能打得怎么样吧! 搜狐体育:你对自己的状态有信心么? 丁俊晖:不是很足…… 搜狐体育:赛前为什么会这么说呢? 丁俊晖:嗯……确实是这样,我是实话实说。 搜狐体育:明天你是直接去赛场,还是会再来练练球? 丁俊晖:明天上午还会过来再练一会儿,然后下午开赛前再去赛场。 搜狐体育:其实今天比赛就开始了,你有在关注比赛的进行么? 丁俊晖:我主要还是练球,就看了多特和迈克洛齐、艾伯顿和邦德那两场球的一两盘,他们打得都比较激烈,领先落后都是一盘之间的事。 搜狐体育:明天和奥沙利文(奥沙利文说吧)的九局比赛打下来,你自己有没有预想过会是一个怎样的比分? 丁俊晖:没有,因为比赛么,赛前没有办法去预测。 搜狐体育:希望会是个胶着的状态? 丁俊晖:其实打球的都希望是自己赢。 搜狐体育:今天会早点儿休息储备体力? 丁俊晖:嗯,今天晚上回早点儿睡,养好精神。 搜狐体育;预祝你明天世锦赛第一场比赛顺利,能够给关注你的球迷上演一场精彩的比赛。 (搜狐体育特派记者思来 谢菲尔德报道) (责任编辑:小丸子)',
                        '搜狐体育讯 北京时间4月21日22:00,在英超联赛第35轮的一场焦点战役中,查尔顿在山谷球场迎战保级竞争对手“镰刀军团”谢菲尔德联队,目前以32分居联赛倒数第3的查尔顿比排在他们前面一位的谢联少了2分,两个保级竞争对手直接较量后的胜负,直接关系到了两队本赛季最终能否保级。中国球员郑智连续第6场代表球队首发,出任中前卫。而效力谢联的另外一名中国球员李铁则仍然未能进入球队16人名单。两人未能再次上演英超赛场上的中国德比。郑智代表球队打满全场,比赛中曾经有一次绝佳的得分机会未能把握住,错过了再次一球成名的机会。最终,查尔顿主场1-1被谢联逼平,保级前景更加不容乐观。 比赛第1分钟,谢联右边路的传中,小禁区内谢尔顿的冲顶,球擦着右边立柱出了底线,不过主裁判吹谢尔顿冲顶之前已经越位。第3分钟,查尔顿在禁区边缘的配合,达伦·本特边路传中,被谢联后卫头球顶出底线。安布罗斯角球开到小禁区内,被谢联门将肯尼双拳击出。开赛后,查尔顿右路安布罗斯表现的非常活跃连续获得传中机会,可惜最后的传中落点都没有把握好。第7分钟,谢联右路再次起球,中路的谢尔顿又获得头球攻门机会,顶高了。查尔顿开场后求胜心切,两个边路压的比较靠上,留个谢联不少反击的机会。第9分钟,查尔顿左路再次让对手轻松传中,中路的斯蒂德没有顶到皮球。 第11分钟,郑智后场接球后轻巧摆脱对方的逼抢,直塞给托马斯。第13分钟,罗梅达尔右路传中,谢联门将肯尼扑球时脱手了,可惜没有查尔顿的球员跟上补射。第13分钟,罗梅达尔再次右路起球,安布罗斯中路力压对方后卫的头球,稍稍偏出左边立柱。第14分钟,谢联获得反击机会,谢尔顿带球长驱直入,郑智一个漂亮的滑铲将球截下。第16分钟,查尔顿角球一个低平球开到禁区中央,达伦·本特一脚垫射,打偏了。第18分钟,查尔顿获得禁区前沿的任意球,经过一拨一踩的配合后,埃·卡尔库里的一脚任意球打门被肯尼单掌托出底线。查尔顿角球开出后,宋在争顶中犯规了。 第23分钟,郑智在后场拿球组织,谢联球队对郑智连拉带扯,裁判吹了犯规。今天比赛开始后,郑智拿球后总会有一名球员上来贴身逼抢。第24分钟,郑智前场断球后,将球吊给禁区中路的达伦·本特,后者头球顶高了。第25分钟,谢联再次在自己的右路通过小配合后传中,中路的迪亚瓦拉头球解围。第27分钟,托马斯前场断球后突然起脚远射,力量并不大,但是谢联门将肯尼扑救时候脱手了,球缓缓出了底线。查尔顿角球开出,质量不好,被肯尼直接得到。第29分钟,郑智在中场的头球争顶中力压对手,将球顶给左路的托马斯。郑智今天拼劲十足几次在与对手的争顶中都力量很足。 第31分钟,托马斯在禁区边缘放倒对方的蒙格马利,谢联得到一个位置很好的任意球机会,吉莱斯皮的射门打在人墙上。第33分钟,谢联左路阿姆斯特朗的传中,吉莱斯皮力压撒切尔头球攻门,卡森飞身将球挡出。第35分钟,谢联的蒙格马利在边线将郑智推倒,裁判并没有吹罚犯规,他还不依不饶对郑智大吼,示意郑智假摔。郑智冷静的走开了。第38分钟,郑智在对方的逼抢下,将球回传出了边线,送给对手一个界外球。谢联在查尔顿后场的抢得很凶。第39分钟,卢克·扬大力界外球掷入禁区内,埃·卡尔库里在争顶的时候压人犯规了。 第41分钟,郑智准确得判断了对手的传球路线,在前场断球成功,迅速传给队友后,托马斯将球转移到右路,可惜这次反击被谢联后卫瓦解。第44分钟,查尔顿获得右路的任意球,安布罗斯传球落点太靠近底线,没有威胁。上半场比赛补时阶段,郑智在与蒙格马利争抢中被后者撞到了腰,蒙格马利吃到黄牌。上半场比赛结束,双方打的紧张激烈而不精彩,0-0,互交白卷。 下半场开始,双方在中场拼抢得更加激烈,球权几度交换。比赛进行了将近50分钟,谢联最大的成功就是通过中场凶狠的逼抢完全抑制了查尔顿的中场组织。第49分钟,卢克·扬右路送出低平球,谢联门将肯尼出击,抢在托马斯之前将球铲出边线。第51分钟,谢尔顿离门足有40米一脚抽射,球偏出底线。 55分钟,郑智给托马斯送出一记漂亮的挑传,托马斯启动慢了,没有接到球。第58分钟,埃·卡尔库里禁区外带球,见无人盯防向前带了两步离门35米外突然起脚远射,球穿过数名谢联防守队员,有轻微的变线,最后还穿了一个后卫的档,谢联门将肯尼先向右移动,再向左已经扑救不及了,球飞进球门左下角,1-0,查尔顿在迟迟找不到破门办法的情况下,依靠一脚远射领先了。 意外丢球后的谢联开始全力反击,第63分钟,谢联获得禁区边缘靠近底线的任意球,任意球开到禁区内,贾吉尔卡的头球顶偏了。第66分钟,郑智在回防中铲倒了谢联的贾吉尔卡吃到一张黄牌。1分钟后,埃·卡尔库里凶狠得铲倒了谢联的球员再次吃到黄牌。第68分钟,谢联的连续冲击终于获得回报。斯蒂德接到队友的斜塞,在禁区边缘跑动中的一脚怒射,攻破了卡森的十指关,1-1,谢联扳平了比分。 第70分钟,查尔顿主教练帕杜用赫雷达森换下了表现不佳的撒切尔。3分钟后,帕杜又用老将哈塞尔巴因克换下托马斯,加强进攻火力。 第75分钟,达伦·本特禁区内接到罗梅达尔的传球,转身一脚打门,球偏了。第78分钟,谢联左路的传中球,落点很好,斯蒂德没有顶到皮球。第79分钟,郑智在禁区内与对手挤位置被裁判吹罚犯规。第80分钟,谢联获得反击的好机会,吉莱斯皮的远射被赫雷达森用身体挡出。第82分钟,查尔顿开出右侧角球,后点达伦·本特回顶,郑智在门前半转身垫射,球擦着立柱飞出底线。 第86分钟,之前赫雷达森争顶中倒地受伤,裁判中止了比赛。比赛恢复后,双方争球,郑智拿球后前场左路突破对手未果。比赛最后阶段,始终无法获得好机会的查尔顿,只能用长传冲吊来威胁谢联的大门。第92分钟,达伦·本特禁区边缘头球后蹭右路的卢克·扬,后者下底传中,谢联门将肯尼将球稳稳抱住。第93分钟,谢联的阿姆斯特朗从中场开始连过数名查尔顿球员后,禁区外一脚射门。打高了。全场比赛结束,查尔顿在主场遗憾的先赢后平,1-1战平谢联,保级前景勘忧。 查尔顿首发阵容: 门将:38-卡森; 后卫:2- 卢克·扬,15-埃·卡尔库里,23-迪亚瓦拉(76’ 22-博格赫拉),32-撒切尔(70’ 3-赫雷达森); 中场: 14-托马斯(73’ 18-哈塞尔巴因克),9-郑智,16-宋,19-罗梅达尔; 前锋:10-达伦·本特,11- 安布罗斯。 替补:33-兰多夫(GK),3-赫雷达森,8-霍兰,18-哈塞尔巴因克,22-博格赫拉。 谢联首发阵容: 门将:1-肯尼; 后卫:26-格里(83’ 21-莱格特伍德),5-摩甘,6-贾吉尔卡,16-基尔加隆; 中场:19-吉莱斯皮,18-通格,17-蒙格马利、20-阿姆斯特朗; 前锋:7-谢尔顿(60’ 32-里查兹),8-斯蒂德。 替补:13-本内特(GK),15-库兹...',
                        '搜狐体育讯 雪藏杰拉德的利物浦(利物浦新闻,利物浦说吧)坐镇主场兵不血刃地击败维冈竞技,荷兰射手库伊特无疑是头号功臣。他在本场比赛中两个精彩的进球为球队带来了三分。值得一提的是荷兰人上周三刚刚喜得贵子,而上帝历来总是喜欢给这些父亲们一些小礼物,比如进球。这次礼物来了两分,球队也轻松取胜,着实可喜可贺。——祝贺库伊特双喜临门 由于贝拉米刚刚痊愈不久,库伊特今天继续与克劳奇组成双高组合。 而比赛中荷兰人继续着自己位置灵活跑动积极的特点,与高佬的配合十分默契。这样的扯动也让身边的彭南特、马克.冈萨雷斯等人有了更多的自由发挥空间,红军闲庭信步般控制着节奏,体现着他们高出对手两个档次以上的实力。——您认为红军三大前锋谁最强? 而库伊特终于是在第30分钟利用换位到左路的彭南特精准的传中,将球狠狠顶进大门。这个进球带来的1-0领先足以宣判客队的死刑,疲于防守的他们尽管排出5名中场,却依然无法与利物浦在全欧洲最有统治力的中场抗衡,即使他们三名世界级的中前卫:杰拉德、马斯切拉诺和西索科都没有出场。这样他们根本无法打出有效反击,上半场比赛居然一脚射门没有,难怪库伊特为首的红军攻击线在比赛中能够如此在客队禁区内肆意漫步。 而下半场比赛中,利物浦有条不紊地继续对对手实行地毯式轰炸,荷兰前锋也继续着自己抢眼的表现,他的第二个进球本来应该在第64分钟就到来,但这次他亲自策划的进攻最后来自他自己和阿隆索(阿隆索新闻,阿隆索说吧)连续两脚射门都被挡出,着实缺乏一些运气。而在贝拉米出场后,迎回最熟悉搭档的库伊特更加自由。威尔士人第一次策划的进攻最终被门前嗅觉敏锐的库伊特将球打进,2-0。 维冈人也被彻底击溃,随时等待比赛结束哨音响起的他们只能接着看着红军们的表演。之后最不留情面的还是库伊特,他有多次机会帮助球队将比分继续扩大,不过智利边锋马克.冈萨雷斯挥霍了他的传中,他自己也在补时阶段浪费了里瑟的传中,原本再完美不过的一个帽子戏法就这么没有了。不过考虑到9天前荷兰人家中新出世的大胖小子是库伊特第二个孩子,两个进球倒可以说是更有纪念意义。 目前库伊特已经在联赛中为利物浦打进了12个进球,是红军的联赛头号射手,克劳奇的9球和杰拉德的7球都无法超过荷兰人。不过值得一提的是,库伊特本赛季在其他赛事中进球率十分不理想,只是在足总杯打进一球,欧冠和联赛杯都是一球没进。高佬克劳奇联赛尽管“只”进9球,但在欧洲冠军联赛的7个进球个个精彩,也成为了球迷心中的超级英雄。库伊特几天后在对阵切尔西(切尔西新闻,切尔西说吧)的比赛中如果能够持续自己的进球运,不仅能够帮助球队,也能让自己打破本赛季尴尬的欧冠“零蛋”成绩单。——您认为库伊特能迎来自己的首个欧冠进球吗? (罗萨里奥) (责任编辑:harbuzi)',
                        '搜狐体育讯 北京时间4月21日,2007斯诺克世锦赛(斯诺克世锦赛说吧)开始了第一天争夺。中国选手丁俊晖(丁俊晖博客,丁俊晖说吧)将在22日迎战英国选手罗尼-奥沙利文(奥沙利文说吧),这场比赛将在北京时间21点30分开始,搜狐体育将对本场比赛进行图文直播。 这场首轮比赛将分为两段进行,首场比赛将进行九局,第二段比赛将决出最后的结果。第二段比赛将在北京时间23日21点30分开始,搜狐体育同样将对这二段比赛进行图文直播。 这场比赛是丁俊晖在世锦赛正赛的首次亮相。用时4年,丁俊晖成为了第217位打进世锦赛正赛的选手,不过他在首场比赛中就遇到了夺冠热门奥沙利文。奥沙利文曾两次夺得世锦赛冠军,也是唯一一位在世锦赛上两次打出单杆满分。他在1997年打出的单杆满分仅用时5分20秒,是斯诺克历史上最快的单杆满分纪录。因此,人们将"火箭"的称号赐予奥沙利文。 丁俊晖在今年与奥沙利文有过两次交手,两位选手各胜一场。两次对决都发生在决赛中,在本赛季北爱尔兰杯的决赛中,丁俊晖以9-6击败了奥沙利文,夺得了自己的第三个排名赛冠军。在温布利大师赛决赛,丁俊晖以3-10负于奥沙利文,赛后,丁俊晖由于"火箭"球迷的过激举动而伤心落泪。 技术分析: 丁俊晖 优势:丁俊晖是一位天赋很高的斯诺克选手,他在18岁时就拿到了自己的首个排名赛冠军。丁俊晖的连续进攻能力很强,围球进攻能力在现今的斯诺克选手中出类拔萃,比赛中单杆破百是一项很轻松的任务。今年,丁俊晖已经有了34次单杆破百的纪录。在今年的温布利大师杯赛上,丁俊晖打出了自己职业生涯的首个单杆147满分。 同时,丁俊晖也是一位技术全面的选手。他打球非常谨慎,如果没有明显机会一般不会采取冒险进攻。在场上,他的成熟程度远远超过自己的年龄。在防守上,丁俊晖的技术也十分精湛,他能非常准确地控制白球,制造斯诺克的能力也很有水准。 劣势:虽然已经获得了3个排名赛冠军,丁俊晖仍然是一位非常年轻的选手。这是他首次参加世锦赛,他的大赛经验相对缺乏。在世锦赛历史上,最年轻的冠军是"台球皇帝"亨德利,他夺冠时只有21岁。而丁俊晖刚刚才度过自己20岁的生日。像奥沙利文这样的斯诺克奇才,也是在26岁时才拿到自己的首个世锦赛冠军。 虽然攻守兼备,但是丁俊晖的技术并非没有瑕疵,他解"斯诺克"(障碍球)的能力相对较差,这让他在面对防守型选手时胜率不高。不太擅长打逆风球也是丁俊晖需要解决的一个缺陷,这两项都会随着大赛经验的增多而逐渐改善。 奥沙利文 优势:奥沙利文可能是斯诺克历史上天赋最高的选手。正如丁俊晖对于他的评价一样,他是一位在技术上无懈可击的选手。同时,奥沙利文也是一位控制场上节奏的大师,他非凡的击球速度很容易带乱对手的节奏。奥沙利文的中长台底袋进攻十分准确,因此对手不能送给他任何看到红球的机会。对于每个与奥沙利文对阵的球员来说,这本身就是一个巨大的压力。 在防守上,奥沙利文的技术也几乎没有瑕疵。他是一位制作斯诺克的高手,也是一位解斯诺克的奇才。当然,让奥沙利文施展防守能力的机会并不是太多。一般情况下,他会在几分钟内连续得到80分而赢下比赛。奥沙利文是一位擅长打逆风球的选手,作为两次世锦赛冠军得主,他懂得在世锦赛上取胜的秘诀。 劣势:相对而言,中袋进攻似乎是奥沙利文唯一不能称之为顶尖的技术。奥沙利文更大的问题来自他自己,他有时太过享受比赛,有时又会突然放弃比赛。前者让他成为一个非常喜欢冒险的球员,台球毕竟是圆的,他不可能每次都能赌赢。后者则让他在一些关键的比赛中彻底放弃抵抗,今年,这样的情况已经发生了两回。第一次是在全英赛对亨德利的1/4决赛,那一次,他干脆立刻退场。第二次是在斯诺克中国赛的半决赛中,他输给了世锦赛卫冕冠军多特。 场外: 奥沙利文在英国拥有众多球迷,世锦赛赛场几乎会成为"火箭"的主场。赔率也看好奥沙利文能够闯关成功。 对阵纪录: 丁俊晖 1胜 2负 2平 奥沙利文 03/04大师赛 丁俊晖 2-6 奥沙利文 05/06联盟杯 丁俊晖 3-3 奥沙利文 06/07北爱尔兰杯 丁俊晖 9-6 奥沙利文 06/07联盟杯 丁俊晖 3-3 奥沙利文 06/07大师赛决赛 丁俊晖 3-10 奥沙利文 (搜狐体育 李峥) (责任编辑:小丸子)',
                        '[点击图片进入下一页] picture 北京时间4月21日晚,英超第35轮全面开战。 红军利物浦坐镇安菲尔德球场迎战同在西北地区的蓝领球队维冈,结果他们依靠库伊特的两个进球2-0战胜对手。图为比赛中的精彩瞬间。 (责任编辑:harbuzi) 相关说吧说吧排行商机创业投资茶余饭后更多gt;gt;',
                        '搜狐体育讯 北京时间4月22日凌晨,2007年联合会杯女子网球(网球新闻,网球说吧)团体赛世界组四分之一决赛结束首日角逐。在第二场女单比赛中,中国姑娘彭帅在先胜一盘,且在第二盘获得赛点的有利情况下,被意大利猛女佩内塔追平总比分。 而在第三盘,彭帅扭伤大腿无奈退出比赛。这样,中国以总比分0-2落后卫冕冠军意大利。第二比赛日两队将进行女双比赛,中国只要再负一场就将出局。 由于首场单打比赛,孙甜甜(孙甜甜新闻,孙甜甜说吧)苦战三盘告负加宾,因此第二场单打比赛对中国队来说相当重要。彭帅如果告负,那中国晋级联合会杯四强的希望将变得很小。从实力上分析,佩内塔略强于彭帅,但年轻的彭帅今年状态还算不错,因此如果彭帅能顶住压力,那她绝对有机会在客场击败实力不俗的意大利名将! 第一盘比赛一开始,彭帅的表现相当不错,她在底线附近的正反手击球给佩内塔制造了很大的麻烦。数据显示,彭帅7次破发机会把握住3次,而佩内塔5次破发机会没有1次破发成功。这样,彭帅首盘请佩内塔吃了“鸭蛋”。第一盘,彭帅总共得到32分,而佩内塔表现不佳仅仅得到19分。 第二盘比赛开始后,两位选手在前三局各自破了对手一个发球局。局分上,双方战成2-2平!此后的比赛,两位选手又各自一次破发。前十局,双方战成5-5平。值得注意的是第十局,彭帅先后获得三个赛点,但她并未把握住!第11局,佩内塔抓住机会成功破发;而后这位意大利猛女顺利保住自己发球局。这样,佩内塔以7-5拿下第二盘,并将总比分追成1-1平,比赛进入决胜盘争夺。 被追平总比分的彭帅信心受到一定影响。第三盘首局她被破发;第二局,彭帅扭伤了大腿;而在第三局,佩内塔又一次成功破发。局分上,彭帅以0-3落后。此时,彭帅选择退出比赛。这样,佩内塔取得了比赛胜利,而意大利以总比分2-0领先中国,卫冕冠军进军今年联合会杯四强仅有一步之遥。 整场比赛耗时1小时55分钟。赛后的技术统计显示,彭帅没有发出1个ACE球,有2个双发失误;佩内塔发出1个ACE球,有6次双发失误。一发得分率佩内塔占据优势,而二发得分率彭帅略占上风。整场比赛,彭帅14次破发机会把握住5次,而佩内塔15次破发机会有5次成功破发。总得分上,两人均得到80分。(可乐) (责任编辑:小丸子)',
                        '搜狐体育讯 北京时间4月21日22:00,在英超联赛第35轮的一场焦点战役中,查尔顿在山谷球场迎战保级竞争对手“镰刀军团”谢菲尔德联队,目前以32分居联赛倒数第3的查尔顿比排在他们前面一位的谢联少了2分,两个保级竞争对手直接较量后的胜负,直接关系到了两队本赛季最终能否保级。中国球员郑智连续第6场代表球队首发,比赛中曾经有一次绝佳的得分机会未能把握住。最终,在这场被英国当地媒体形容为“自苏格兰独立战争以来,大不列颠最伟大的内战”中,查尔顿主场1-1被谢联逼平,保级前景更加不容乐观。 (责任编辑:Gedicht)',
                        '搜狐体育讯 0:0,重压之下的绿城表现出了一股强烈的求生本能,在昨晚与北京国安队的比赛中,阵容不整的绿城队最终逼平对手。从比分来说,这是一个能让俱乐部和全队接受的结果,从过程来说,是门将戚晓光拯救了全队,给了球队一个稍稍喘息的机会。 在没有丝毫迹象有情况下,上周六,老板发出话来,在接下来的两战中必须胜一场,作为俱乐部老总,完成任务也成了他的头号大事。沈强昨晚穿了一件红色T恤,这可能有一种祈求运气的成份,整场比赛,沈强一直脸色铁青,满头大汗。赛后,很多人都安慰他,平局可以接受,沈强这才舒了一口气。何至是沈强有压力,这场比赛也是主帅王政执教绿城四年来最艰难的时候,坊间不断地有消息传出,如果两战全败,王政肯定走人。尽管王政赛前在接受采访时称自己没有听到这方面的消息,但老板当天面对全队言辞激烈的话他不可能没有听到。 没有办法,惟一的办法就是自救!首发阵容中一下子出现了瓦格纳、唐晓菲、孙巍、蔡楚川四名“新人”,及兴华和吴伟也出现在18人大名单中。背水一战的绿城是憋足了劲,场面上,绿城丝毫不输给国安,不过比赛确实谈不上精彩,激烈的拼抢不能掩盖技战术水平的不足。直到第73分钟,全场最精彩的一次打门才上演,第一次首发出场的外援瓦格纳在甩开了防守队员后远射打在门柱上,瓦格纳的表现也让球迷为之一振,尽管身背“名货”之称,但瓦格纳还是体现了自己的价值。凭借这场比赛的表现,在堤科到来后,回家的可能并不一定瓦格纳。 弱旅出门神!比赛的最后的阶段就成了戚晓光的个人表演,补时阶段,他连续三次不可思议地扑出了对手的补射,保住了球队的一场平局。“他们的守门员太好了!我们的前锋在他面前显得毫无作为。”国安队主帅李章洙说。“比赛的最后了阶段,是戚晓光拯救了整个队伍,拯救了我!”王政说得很真诚。的确,如果不是戚晓光的出色发挥,迎接绿城的可能依旧是输球。 “两战必须拿下一场!”这是宋卫平的原话,战平国安队,绿城收获了一分,但这一分仅仅是一次喘息。事实上,这一分也把绿城推到了绝境,绿城的处境会更为之艰难,在接下来同申花的比赛中,绿城还得要全取三分才能完成老板交给的任务。申花队昨天败给大连实德队,下轮回到主场,朱峻是不会容忍球队输球的,而打上海球队,宋卫平往往会非常来劲。 或许,下场比赛才是真正决定绿城命运的时候!(西湖的鱼) (责任编辑:迎迎)',
                        '搜狐体育讯 斯图加特,对于拜仁(拜仁新闻,拜仁说吧)主帅希斯菲尔德而言肯定没有什么好感,因为3年前,他就是带队在这里1:3不敌马加特的斯图加特,同时也输掉了自己的帅位,那个赛季之后,马加特接掌了希斯菲尔德的教鞭。 如今,重掌拜仁教鞭的希斯菲尔德再次重返斯图加特,但90分钟的比赛之后,记分牌上0:2的比分再次深深的刺痛了老帅的心。 虽然这场失利对希斯菲尔德帅位没有任何影响,但是这场失利也很可能导致拜仁告别下赛季冠军联赛,这对连续10年参加这一欧洲最高水平赛事的拜仁而言,是不可想象的,甚至于对德国足球而言也是一场“地震”,没有了拜仁领军,德甲球队在冠军联赛的前景更加显得扑朔迷离。虽说还有理论上的夺取冠军联赛资格,可从本场比赛所反映出的两队明显不同的状态,也不由让人们为之捏一把汗:拜仁还有希望上演奇迹吗? 失利的深层次原因还在于拜仁缺乏领军人物,当卡恩的怒吼已经无法激发球员们的斗志时,拜仁需要一名新的中前场领袖,带领球队继续前进,但遗憾的是目前拜仁队中并没有这样的球员,无论是范博梅尔还是哈格里夫斯(哈格里夫斯新闻,哈格里夫斯说吧),无论是气质还是能力上,都难以胜任领袖角色。希斯菲尔德也唯有仰天长叹:“老虎”今在何方?(注:老虎:前拜仁队长、中场核心埃芬博格,1998～2002年期间效力拜仁) 从本场和斯图加特的比赛来看,拜仁的无核之痛问题暴露无遗,全场比赛,拜仁在前场失误频频,根本无法组织起有效的攻势,只能依靠马凯、范博梅尔等人的个人能力寻觅一两次远射机会,缺乏一个有效的中场组织者,才是导致拜仁本场比赛处于下风的深层次原因。没有一名球员,能够有效的衔接起拜仁中场和锋线,导致中场球员各自为战,前锋孤立无援,无法给斯图加特大门构成有效的威胁,最终酿成了失利的苦果。 或许只有引援才是拜仁的唯一出路,当迭戈拒绝拜仁之后,范德法特(范德法特新闻,范德法特说吧)成为了拜仁目前最合适的中场引援人选,这名汉堡队长已经经受了德甲两年的洗礼,其综合实力无庸置疑,而23岁的他也有着拜仁此前相中的巴斯图尔克和林肯等人所不具备的年龄优势,如果他能够到来,无疑将成为拜仁未来球队建设的重要组成部分。如今的拜仁,正呼唤新的中场领袖!(寒潭冷月) (责任编辑:Gedicht)',
                        '搜狐体育讯 北京时间4月22日,英超联赛进入第35轮争夺。曼联坐镇主场老特拉福德球场迎战米德尔斯堡。上半时比赛,曼联与米德尔斯堡1-1战平,理查森开场3分钟首开记录,维杜卡在补时阶段头球攻门扳平比分。 本场比赛是两家球会在正式比赛中的第118次交锋,此前曼联以58胜26平33负占据绝对优势,并且在近4次正赛中2胜2平保持不败。不过在联赛中的近6次交手曼联仅2次击败米德尔斯堡,并且米堡也是除切尔西外在英超联赛作客老特拉福德取得胜局最多(3次)的球队。此役,虽然维迪奇、加里-内维尔和萨哈继续因伤缺战,但里奥-费迪南德和奥谢两人均伤愈归队重返先发,老将吉格斯被准轮休开场时坐在替补席,理查森首发出现在前场左路。米堡方面,阿尔卡因腹股沟伤继续缺战,主教练索斯盖特重新将阵形变回到4-4-2,重返先发的维杜卡与雅库布在锋线搭档,这也意味着澳大利亚人距离个人英超第200场比赛仅有一步之遥。 上半时开场,曼联便积极进攻并很快有所收获。 2分52秒,斯科尔斯在中场右侧断球后长传身后球策动反击,鲁尼中路插上反越位成功,胸部卸球连续两控后面对施瓦泽向左侧一领晃过了澳大利亚门将,不过在鲁尼起脚射空门前,从左翼一直跟进的理查森在5米处“抢功”,左脚推射打入了个人在曼联的第11球,这既是第50次在英超联赛出场的理查森在近3场比赛中取得的第2球,也是曼联在近5场正赛中攻进的第15球。比分被改写后,两队在场上一度陷入胶着。第10分钟,雅库布外围的射门偏出右立柱。第16分钟,斯科尔斯在本方半场抬脚过高踢中罗申巴克头部,好在伤势不重。 第26分钟,鲁尼在35米外远射打飞。2分钟后,费迪南德带球前插在中场被人断球,雅库布衔枚急进19米外低射被快速补防的布朗一挡,皮球擦着左立柱偏出。第32分钟,C-罗纳尔多30米外的射门偏出近端底线。4分钟,C-罗纳尔多脚跟磕球摆脱被博阿滕直接扫倒,米堡队长也因此吃到黄牌。海因策主罚任意球在被人墙挡出后再射又中途碰人变线飞出底线。此后,C-罗纳尔多和鲁尼接连遭遇对方凶狠铲防,罗申巴克也因为撂倒鲁尼被黄牌警告。终场前,斯科尔斯因不满裁判判罚抱怨无谓吃到了本赛季个人第8张黄牌,与此同时费迪南德再次向场边示意自己感觉肌肉不适无法坚持。补时阶段,米德尔斯堡左侧阻止进攻,雅库布在大禁区前沿得球后分到左侧,唐宁传中,费迪南德无法起跳封前点,维杜卡抢在布朗之前5米处冲顶破门扳平比分。上半时比赛,曼联与米堡1-1战平进入半场休息。 曼联(4-4-2):1号范德萨;22号奥谢,5号费迪南德,6号布朗,4号海因策;7号C-罗纳尔多,18号斯科尔斯,16号卡里克,23号理查森;14号阿兰-史密斯,8号鲁尼 米德尔斯堡(4-4-2):1号施瓦泽;24号安德鲁-戴维斯,8号伍德盖特,12号波加特茨,33号安德鲁-泰勒;27号卡特莫尔,10号罗申巴克,7号博阿滕,19号唐宁;21号雅库布,9号维杜卡 (责任编辑:harbuzi)',
                    )),),
                'cellValSeparator' => '', // 每个值中元素分割符
            ),
            'plaintextb' => array( // 属性名称
                'cellNumber' => 1, // 属性有多少个值
                'metaValSeparator' => '', // 每个值之间分隔符
                'cellScope' => array( // 每个值由几个元素组成,按照数组先后设置每一个元素
                    array('string' => array(
                        '搜狐体育讯 北京时间4月21日晚22点,在英超联赛第35轮的一场比赛中,曼城客场迎战联赛倒数第一的沃特福德,最终凭借瓦塞尔和普里什金分别为各自球队的进球,双方曼城客场和沃特福德1-01握手言和。上轮迎战阿森纳受伤下场的孙继海,本场比赛再次出现在首发阵容中,在孙继海复出之后参加了球队全部9轮联赛,其中8场比赛都是首发出场,在曼城主力位置不可撼动。比赛第85分钟孙继海被替换下场,还有伤病在身的孙继海显然是得到了教练的保护。 在本轮比赛之前曼城积41分,排在联赛第13位,本赛季已无降级之忧,曼城近一阶段战绩比较出色,一扫前一阶段联赛5连败的颓势,近6轮比赛取得11分,也正是这样的表现使得曼城一跃脱离降级区。反观沃特福德,本赛季表现及其糟糕,34轮联赛过后只积23分,排在倒数第一位,目前为止也只赢得了4场比赛的胜利,共进了25球,和曼城差不多,但是却失掉了56球,防守是球队主要的问题。 在英超的历史上,两队总共有23次交锋,曼城12胜6平5负占据优势,但是在沃特福德主场维卡里吉路球场,曼城并没有多少优势,11次交锋4胜4平3负,基本上打成了平手。本场比赛曼城的单箭头,能对沃特福德脆弱的防线形成多大威胁,将左右比赛的战局。中国球员孙继海再次出现在右前卫上,到底又会有怎样的发挥值得期待。 比赛开始之后,曼城表现比较积极,率先发动攻势。第一分钟,马洪对巴顿犯规,曼城获得任意球,哈曼将球打进禁区,被回防的马洪解围。第4分钟曼城再次获得前场任意球,哈曼再次将球发到禁区内,门将福斯特将球得到。第5分钟沃特福德获得角球机会,曼城门将伊萨克森将球解围。第10分钟,沃特福德获得射门机会,在禁区左肋12码处头球攻门,偏出。 曼城今天在防守中多采用造越位战术,沃特福德多次掉进越位陷阱。第19分钟,曼城再次获得前场任意球机会,哈曼第三次操刀,直接攻门被门将福斯特飞身救险。第24分钟,马龙·金再次越位,开场之后沃特福德已经三次越位。第24分钟,沃特福德后卫对巴顿犯规,曼城再次获得前场任意球,哈曼将球吊到禁区内,被后卫卡莱尔解围。第29分钟,瓦塞尔在进攻中和队员传跑没有形成默契,越位失去一次破门良机。第37分钟,瓦塞尔在前场犯规,福斯特将球直接吊到曼城禁区内,邓恩及时解围。 第38分钟,此前一直表现平淡的孙继海,在前场右路防守时手球犯规,沃特福德获得任意球机会,孙继海今天在右路功放表现一般,也许是受到了伤病的影响,而曼城在之前的比赛中也是一次射正都没有,今天曼城整体表现都不是很理想。第38分钟,沃特福德再次获得射门机会,布阿扎20码处的射门被伊萨克森得到。第42分钟,曼城获得前场任意球机会,哈曼将球打到禁区被后卫解围。 在上半场最后阶段曼城发起了一波进攻高潮,第44分钟,巴顿右路的角球被沃特福德后卫解围。第45分钟,孙继海在前场离球门25码处获得射门机会,大力低射从球门右边偏出。最后,上半场双方战成0-0. 易边再战,双方都没有对阵容作出调整。第48分钟,沃特福德获得角球机会,班古拉将球罚向禁区中路,哈曼将球解围。第53分钟沃特福德再次角球进攻,曼城回防的米勒将球解围。 第53分钟曼城终于迎来了首粒进球,瓦塞尔在在前场右侧离球门25米出起脚打门,球从右侧攻破了越过了福斯特的封堵,曼城客场1-0领先,曼城本场比赛第一脚打在门框范围内的射门,就得到一分,瓦塞尔也打进了本赛季个人第三粒进球。 进球之后曼城打得更加得心应手,逐渐开始控制场上局面,而沃特福德也没能组织起有效的攻势,场面开始变得异常沉闷。第55分钟,米勒对里纳尔迪犯规,沃特福德获得任意球,邓恩将球解围。第60分钟,哈曼对沃特福德班古拉恶意犯规,得到一张黄牌。 第75分钟沃特福德将比分扳平,下半场替补上场的普里什金建功,在禁区中路离球门12码处射门得手,场上比分1-1,双方再次回到同一起跑线。在另外一个赛场上,查尔顿在保级大战中,也被谢菲联顽强逼平,形势非常危急。第77分钟,巴顿在离球门12码处射门,被后卫挡住,之后巴顿在禁区线上传球,被班古拉解围。 第85分钟,曼城做出换人,孙继海被爱尔兰替换下场,这也是孙继海在近7场联赛中,首次因为战术调整而被替换下场,上次战术调整下场还是3月15日与切尔西的补赛中。 第87分钟,沃特福德再得破门良机,门前12码处射门从左侧偏出。第90分钟,萨马拉斯在进攻中越位,错失了最后一次得分机会。最终双方以1-1握手言和。 (风清扬) 沃特福德(433)门将:26-福斯特后卫:12-多伊利、5-卡莱尔、6-德梅里特、11-鲍威尔中场:20-班古拉、7-弗朗西斯(24’15-卡巴) 、8-马洪前锋:31-里纳尔迪(82’17-希图、18-布阿扎、9-马龙·金替补:16-理查德·李、23-马里亚帕、17-希图、15-卡巴、24-普里什金曼城(451) 门将:1-伊萨克森 后卫:3-波尔、15-迪斯丁、22-邓恩、16-奥姆哈中场:17-孙继海(85’7-爱尔兰、33-约翰逊、8-巴顿、21-哈曼、24-比斯利(35’43-米勒前锋:11-瓦塞尔替补:12-韦弗、7-爱尔兰、30-科拉迪、43-米勒、20-萨马拉斯 (责任编辑:Gedicht)',
                        '搜狐体育讯 北京时间4月21日济南消息 同长春亚泰比赛之前,本赛季的山东鲁能一直存在一种神奇的“亚冠定律”,即但凡亚冠联赛之前的联赛,球队均能在联赛中大比分获胜。 客场1-0战胜阿德莱德之前,球队5-2狂屠辽宁;主场2-1击败城南一和前,3-1战胜青岛;主场队越南隆安前夕,4-2轻取长沙金德。但就在球队即将前往越南出征亚冠之前,同长春亚泰1-1的结果打破了这一常规,若非韩鹏第81分钟的头球,球队甚至面临主场输球的尴尬。 对于这一亚冠定律的突然失灵,主教练图拨仍然坚持体能不是平局的诱因,塞尔维亚人将几乎所有的责任推给了中国足协安排的马来西亚主裁判克林斯汉。 之所以对裁判不满,很大程度上在于马来西亚裁判经常中断比赛和漏判了双方点球。上半场崔鹏和亚泰队员高建两次在禁区被放倒,按照双方的理解均应获得点球,但克林斯汉却对二人出示了黄牌,示意两人假摔。洋裁判的执法水平今天引起了很大争议,两边不讨好,少师高洪波同样对裁判颇有微辞,他表示,作为两支崇尚攻势足球的球队来说,在鲁能球场如此漂亮的草皮上没能打出精彩的比赛,应该说,主裁判经常中断比赛是一个重要原因。” 图拔赛后对马来西亚主裁进行了猛烈炮轰,他说:“目前的中超联赛中,鲁能和长春两只队伍都是崇尚进攻的队伍,目前也进球最多,双方完全有能力奉献精彩比赛。很遗憾,裁判的判罚标准影响了比赛的质量,这场比赛是一名外籍裁判来执法的,我相信足协请外籍比赛执法是想让比赛更加公正和公平,但是这种公平和公众最好不要建立在影响比赛质量的前提下,否则这样的比赛是没有意义的,今天裁判场上的表现却起到了相反的结果,左右了比赛的进程和结果。” 在王栋第43分钟利用任意球得分领先后,下半场图拔科维奇换上了三名国奥小将,加强进攻,但队员们在裁判判罚下情绪显得相当急躁,多次浪费得分机会,并比赛尾声出现了球员抽筋的现象,图拨谈到这一点时将责任同样归咎于主裁判的表现。他说:“今天的比赛中,对手的防守做的很出色,整只球队的退防很快,在得球后又迅速的转入进攻,这就要求我们的队员要进行更多的更长距离的往返跑动,这是球员体力透支的原因。我们的队员在比赛中表现出了一种急躁的情绪,但这种情绪更多的是由于裁判的判罚引起的。” 对1-1的比赛结果,图拨直言相当不满意。但他否认这场平局对于鲁能卫冕决心的影响。”对于本场比赛的平局,我当然是不满意的,我们比赛的目的就是要获得三分,回去后我们要好好分析,找出解决问题的办法。比赛要一场一场的踢,中超联赛才进行到第七轮,现在就谈联赛冠军归属还为时尚早。”亚泰主帅高洪波对于平局的结果表示了接受,在暗讽裁判水平低下的同时,高洪波对鲁能周三的亚冠比赛进行了祝福。 (华奥星空 何醒发自济南) (责任编辑:迎迎)',
                        '搜狐体育讯 作为丁俊晖(丁俊晖博客,丁俊晖说吧)全球官方网站以及个人官方博客的承建商,搜狐在丁俊晖第一次斯诺克世锦赛之旅的过程中给与高度关注,并全方位地给网友们带来有关丁俊晖方方面面的报道。其中,我们将每日对丁俊晖进行独家专访,让丁俊晖亲自向关心他的网友们讲述自己的世锦赛之路。今天,我们推出的是第四期: 搜狐体育:今天训练的情况如何? 丁俊晖:还可以吧,这些天都练得不错。 搜狐体育:明天你的比赛就要开始了,你觉得自己目前的状态调整到最好了么?丁俊晖:应该还没有吧,我自己感觉是,还是看看比赛的时候能打得怎么样吧!搜狐体育:你对自己的状态有信心么?丁俊晖:不是很足……搜狐体育:赛前为什么会这么说呢?丁俊晖:嗯……确实是这样,我是实话实说。 搜狐体育:明天你是直接去赛场,还是会再来练练球?丁俊晖:明天上午还会过来再练一会儿,然后下午开赛前再去赛场。搜狐体育:其实今天比赛就开始了,你有在关注比赛的进行么? 丁俊晖:我主要还是练球,就看了多特和迈克洛齐、艾伯顿和邦德那两场球的一两盘,他们打得都比较激烈,领先落后都是一盘之间的事。搜狐体育:明天和奥沙利文奥沙利文说吧的九局比赛打下来,你自己有没有预想过会是一个怎样的比分? 丁俊晖:没有,因为比赛么,赛前没有办法去预测。搜狐体育:希望会是个胶着的状态?丁俊晖:其实打球的都希望是自己赢。搜狐体育:今天会早点儿休息储备体力? 丁俊晖:嗯,今天晚上回早点儿睡,养好精神。搜狐体育;预祝你明天世锦赛第一场比赛顺利,能够给关注你的球迷上演一场精彩的比赛。 (搜狐体育特派记者思来 谢菲尔德报道) (责任编辑:小丸子)',
                        '搜狐体育讯 北京时间4月21日22:00,在英超联赛第35轮的一场焦点战役中,查尔顿在山谷球场迎战保级竞争对手“镰刀军团”谢菲尔德联队,目前以32分居联赛倒数第3的查尔顿比排在他们前面一位的谢联少了2分,两个保级竞争对手直接较量后的胜负,直接关系到了两队本赛季最终能否保级。中国球员郑智连续第6场代表球队首发,出任中前卫。而效力谢联的另外一名中国球员李铁则仍然未能进入球队16人名单。两人未能再次上演英超赛场上的中国德比。郑智代表球队打满全场,比赛中曾经有一次绝佳的得分机会未能把握住,错过了再次一球成名的机会。最终,查尔顿主场1-1被谢联逼平,保级前景更加不容乐观。 比赛第1分钟,谢联右边路的传中,小禁区内谢尔顿的冲顶,球擦着右边立柱出了底线,不过主裁判吹谢尔顿冲顶之前已经越位。第3分钟,查尔顿在禁区边缘的配合,达伦·本特边路传中,被谢联后卫头球顶出底线。安布罗斯角球开到小禁区内,被谢联门将肯尼双拳击出。开赛后,查尔顿右路安布罗斯表现的非常活跃连续获得传中机会,可惜最后的传中落点都没有把握好。第7分钟,谢联右路再次起球,中路的谢尔顿又获得头球攻门机会,顶高了。查尔顿开场后求胜心切,两个边路压的比较靠上,留个谢联不少反击的机会。第9分钟,查尔顿左路再次让对手轻松传中,中路的斯蒂德没有顶到皮球。 第11分钟,郑智后场接球后轻巧摆脱对方的逼抢,直塞给托马斯。第13分钟,罗梅达尔右路传中,谢联门将肯尼扑球时脱手了,可惜没有查尔顿的球员跟上补射。第13分钟,罗梅达尔再次右路起球,安布罗斯中路力压对方后卫的头球,稍稍偏出左边立柱。第14分钟,谢联获得反击机会,谢尔顿带球长驱直入,郑智一个漂亮的滑铲将球截下。第16分钟,查尔顿角球一个低平球开到禁区中央,达伦·本特一脚垫射,打偏了。第18分钟,查尔顿获得禁区前沿的任意球,经过一拨一踩的配合后,埃·卡尔库里的一脚任意球打门被肯尼单掌托出底线。查尔顿角球开出后,宋在争顶中犯规了。 第23分钟,郑智在后场拿球组织,谢联球队对郑智连拉带扯,裁判吹了犯规。今天比赛开始后,郑智拿球后总会有一名球员上来贴身逼抢。第24分钟,郑智前场断球后,将球吊给禁区中路的达伦·本特,后者头球顶高了。第25分钟,谢联再次在自己的右路通过小配合后传中,中路的迪亚瓦拉头球解围。第27分钟,托马斯前场断球后突然起脚远射,力量并不大,但是谢联门将肯尼扑救时候脱手了,球缓缓出了底线。查尔顿角球开出,质量不好,被肯尼直接得到。第29分钟,郑智在中场的头球争顶中力压对手,将球顶给左路的托马斯。郑智今天拼劲十足几次在与对手的争顶中都力量很足。 第31分钟,托马斯在禁区边缘放倒对方的蒙格马利,谢联得到一个位置很好的任意球机会,吉莱斯皮的射门打在人墙上。第33分钟,谢联左路阿姆斯特朗的传中,吉莱斯皮力压撒切尔头球攻门,卡森飞身将球挡出。第35分钟,谢联的蒙格马利在边线将郑智推倒,裁判并没有吹罚犯规,他还不依不饶对郑智大吼,示意郑智假摔。郑智冷静的走开了。第38分钟,郑智在对方的逼抢下,将球回传出了边线,送给对手一个界外球。谢联在查尔顿后场的抢得很凶。第39分钟,卢克·扬大力界外球掷入禁区内,埃·卡尔库里在争顶的时候压人犯规了。 第41分钟,郑智准确得判断了对手的传球路线,在前场断球成功,迅速传给队友后,托马斯将球转移到右路,可惜这次反击被谢联后卫瓦解。第44分钟,查尔顿获得右路的任意球,安布罗斯传球落点太靠近底线,没有威胁。上半场比赛补时阶段,郑智在与蒙格马利争抢中被后者撞到了腰,蒙格马利吃到黄牌。上半场比赛结束,双方打的紧张激烈而不精彩,0-0,互交白卷。 下半场开始,双方在中场拼抢得更加激烈,球权几度交换。比赛进行了将近50分钟,谢联最大的成功就是通过中场凶狠的逼抢完全抑制了查尔顿的中场组织。第49分钟,卢克·扬右路送出低平球,谢联门将肯尼出击,抢在托马斯之前将球铲出边线。第51分钟,谢尔顿离门足有40米一脚抽射,球偏出底线。 55分钟,郑智给托马斯送出一记漂亮的挑传,托马斯启动慢了,没有接到球。第58分钟,埃·卡尔库里禁区外带球,见无人盯防向前带了两步离门35米外突然起脚远射,球穿过数名谢联防守队员,有轻微的变线,最后还穿了一个后卫的档,谢联门将肯尼先向右移动,再向左已经扑救不及了,球飞进球门左下角,1-0,查尔顿在迟迟找不到破门办法的情况下,依靠一脚远射领先了。 意外丢球后的谢联开始全力反击,第63分钟,谢联获得禁区边缘靠近底线的任意球,任意球开到禁区内,贾吉尔卡的头球顶偏了。第66分钟,郑智在回防中铲倒了谢联的贾吉尔卡吃到一张黄牌。1分钟后,埃·卡尔库里凶狠得铲倒了谢联的球员再次吃到黄牌。第68分钟,谢联的连续冲击终于获得回报。斯蒂德接到队友的斜塞,在禁区边缘跑动中的一脚怒射,攻破了卡森的十指关,1-1,谢联扳平了比分。第70分钟,查尔顿主教练帕杜用赫雷达森换下了表现不佳的撒切尔。3分钟后,帕杜又用老将哈塞尔巴因克换下托马斯,加强进攻火力。 第75分钟,达伦·本特禁区内接到罗梅达尔的传球,转身一脚打门,球偏了。第78分钟,谢联左路的传中球,落点很好,斯蒂德没有顶到皮球。第79分钟,郑智在禁区内与对手挤位置被裁判吹罚犯规。第80分钟,谢联获得反击的好机会,吉莱斯皮的远射被赫雷达森用身体挡出。第82分钟,查尔顿开出右侧角球,后点达伦·本特回顶,郑智在门前半转身垫射,球擦着立柱飞出底线。 第86分钟,之前赫雷达森争顶中倒地受伤,裁判中止了比赛。比赛恢复后,双方争球,郑智拿球后前场左路突破对手未果。比赛最后阶段,始终无法获得好机会的查尔顿,只能用长传冲吊来威胁谢联的大门。第92分钟,达伦·本特禁区边缘头球后蹭右路的卢克·扬,后者下底传中,谢联门将肯尼将球稳稳抱住。第93分钟,谢联的阿姆斯特朗从中场开始连过数名查尔顿球员后,禁区外一脚射门。打高了。全场比赛结束,查尔顿在主场遗憾的先赢后平,1-1战平谢联,保级前景勘忧。 查尔顿首发阵容:门将:38-卡森;后卫:2-卢克·扬,15-埃·卡尔库里,23-迪亚瓦拉(76’22-博格赫拉),32-撒切尔(70’3-赫雷达森); 中场: 14-托马斯(73’ 18-哈塞尔巴因克),9-郑智,16-宋,19-罗梅达尔;前锋:10-达伦·本特,11-安布罗斯。替补:33-兰多GK),3-赫雷达森,8-霍兰,18-哈塞尔巴因克,22-博格赫拉。 谢联首发阵容: 门将:1-肯尼;后卫:26-格里(83’21-莱格特伍德),5-摩甘,6-贾吉尔卡,16-基尔加隆;中场:19-吉莱斯皮,18-通格,17-蒙格马利、20-阿姆斯特朗;前锋:7-谢尔顿(60’32-里查兹),8-斯蒂德。替补:13-本内特(GK),15-库兹...',
                        '搜狐体育讯 雪藏杰拉德的利物浦(利物浦新闻,利物浦说吧)坐镇主场兵不血刃地击败维冈竞技,荷兰射手库伊特无疑是头号功臣。他在本场比赛中两个精彩的进球为球队带来了三分。值得一提的是荷兰人上周三刚刚喜得贵子,而上帝历来总是喜欢给这些父亲们一些小礼物,比如进球。这次礼物来了两分,球队也轻松取胜,着实可喜可贺。——祝贺库伊特双喜临门 由于贝拉米刚刚痊愈不久,库伊特今天继续与克劳奇组成双高组合。 而比赛中荷兰人继续着自己位置灵活跑动积极的特点,与高佬的配合十分默契。这样的扯动也让身边的彭南特、马克.冈萨雷斯等人有了更多的自由发挥空间,红军闲庭信步般控制着节奏,体现着他们高出对手两个档次以上的实力。——您认为红军三大前锋谁最强? 而库伊特终于是在第30分钟利用换位到左路的彭南特精准的传中,将球狠狠顶进大门。这个进球带来的1-0领先足以宣判客队的死刑,疲于防守的他们尽管排出5名中场,却依然无法与利物浦在全欧洲最有统治力的中场抗衡,即使他们三名世界级的中前卫:杰拉德、马斯切拉诺和西索科都没有出场。这样他们根本无法打出有效反击,上半场比赛居然一脚射门没有,难怪库伊特为首的红军攻击线在比赛中能够如此在客队禁区内肆意漫步。 而下半场比赛中,利物浦有条不紊地继续对对手实行地毯式轰炸,荷兰前锋也继续着自己抢眼的表现,他的第二个进球本来应该在第64分钟就到来,但这次他亲自策划的进攻最后来自他自己和阿隆索(阿隆索新闻,阿隆索说吧)连续两脚射门都被挡出,着实缺乏一些运气。而在贝拉米出场后,迎回最熟悉搭档的库伊特更加自由。威尔士人第一次策划的进攻最终被门前嗅觉敏锐的库伊特将球打进,2-0。 维冈人也被彻底击溃,随时等待比赛结束哨音响起的他们只能接着看着红军们的表演。之后最不留情面的还是库伊特,他有多次机会帮助球队将比分继续扩大,不过智利边锋马克.冈萨雷斯挥霍了他的传中,他自己也在补时阶段浪费了里瑟的传中,原本再完美不过的一个帽子戏法就这么没有了。不过考虑到9天前荷兰人家中新出世的大胖小子是库伊特第二个孩子,两个进球倒可以说是更有纪念意义。 目前库伊特已经在联赛中为利物浦打进了12个进球,是红军的联赛头号射手,克劳奇的9球和杰拉德的7球都无法超过荷兰人。不过值得一提的是,库伊特本赛季在其他赛事中进球率十分不理想,只是在足总杯打进一球,欧冠和联赛杯都是一球没进。高佬克劳奇联赛尽管“只”进9球,但在欧洲冠军联赛的7个进球个个精彩,也成为了球迷心中的超级英雄。库伊特几天后在对阵切尔西(切尔西新闻,切尔西说吧)的比赛中如果能够持续自己的进球运,不仅能够帮助球队,也能让自己打破本赛季尴尬的欧冠“零蛋”成绩单。——您认为库伊特能迎来自己的首个欧冠进球吗? (罗萨里奥) (责任编辑:harbuzi)',
                        '搜狐体育讯 北京时间4月21日,2007斯诺克世锦赛(斯诺克世锦赛说吧)开始了第一天争夺。中国选手丁俊晖(丁俊晖博客,丁俊晖说吧)将在22日迎战英国选手罗尼-奥沙利文(奥沙利文说吧),这场比赛将在北京时间21点30分开始,搜狐体育将对本场比赛进行图文直播。 这场首轮比赛将分为两段进行,首场比赛将进行九局,第二段比赛将决出最后的结果。第二段比赛将在北京时间23日21点30分开始,搜狐体育同样将对这二段比赛进行图文直播。 这场比赛是丁俊晖在世锦赛正赛的首次亮相。用时4年,丁俊晖成为了第217位打进世锦赛正赛的选手,不过他在首场比赛中就遇到了夺冠热门奥沙利文。奥沙利文曾两次夺得世锦赛冠军,也是唯一一位在世锦赛上两次打出单杆满分。他在1997年打出的单杆满分仅用时5分20秒,是斯诺克历史上最快的单杆满分纪录。因此,人们将"火箭"的称号赐予奥沙利文。 丁俊晖在今年与奥沙利文有过两次交手,两位选手各胜一场。两次对决都发生在决赛中,在本赛季北爱尔兰杯的决赛中,丁俊晖以9-6击败了奥沙利文,夺得了自己的第三个排名赛冠军。在温布利大师赛决赛,丁俊晖以3-10负于奥沙利文,赛后,丁俊晖由于"火箭"球迷的过激举动而伤心落泪。 技术分析: 丁俊晖 优势:丁俊晖是一位天赋很高的斯诺克选手,他在18岁时就拿到了自己的首个排名赛冠军。丁俊晖的连续进攻能力很强,围球进攻能力在现今的斯诺克选手中出类拔萃,比赛中单杆破百是一项很轻松的任务。今年,丁俊晖已经有了34次单杆破百的纪录。在今年的温布利大师杯赛上,丁俊晖打出了自己职业生涯的首个单杆147满分。 同时,丁俊晖也是一位技术全面的选手。他打球非常谨慎,如果没有明显机会一般不会采取冒险进攻。在场上,他的成熟程度远远超过自己的年龄。在防守上,丁俊晖的技术也十分精湛,他能非常准确地控制白球,制造斯诺克的能力也很有水准。 劣势:虽然已经获得了3个排名赛冠军,丁俊晖仍然是一位非常年轻的选手。这是他首次参加世锦赛,他的大赛经验相对缺乏。在世锦赛历史上,最年轻的冠军是"台球皇帝"亨德利,他夺冠时只有21岁。而丁俊晖刚刚才度过自己20岁的生日。像奥沙利文这样的斯诺克奇才,也是在26岁时才拿到自己的首个世锦赛冠军。 虽然攻守兼备,但是丁俊晖的技术并非没有瑕疵,他解"斯诺克"(障碍球)的能力相对较差,这让他在面对防守型选手时胜率不高。不太擅长打逆风球也是丁俊晖需要解决的一个缺陷,这两项都会随着大赛经验的增多而逐渐改善。 奥沙利文 优势:奥沙利文可能是斯诺克历史上天赋最高的选手。正如丁俊晖对于他的评价一样,他是一位在技术上无懈可击的选手。同时,奥沙利文也是一位控制场上节奏的大师,他非凡的击球速度很容易带乱对手的节奏。奥沙利文的中长台底袋进攻十分准确,因此对手不能送给他任何看到红球的机会。对于每个与奥沙利文对阵的球员来说,这本身就是一个巨大的压力。 在防守上,奥沙利文的技术也几乎没有瑕疵。他是一位制作斯诺克的高手,也是一位解斯诺克的奇才。当然,让奥沙利文施展防守能力的机会并不是太多。一般情况下,他会在几分钟内连续得到80分而赢下比赛。奥沙利文是一位擅长打逆风球的选手,作为两次世锦赛冠军得主,他懂得在世锦赛上取胜的秘诀。 劣势:相对而言,中袋进攻似乎是奥沙利文唯一不能称之为顶尖的技术。奥沙利文更大的问题来自他自己,他有时太过享受比赛,有时又会突然放弃比赛。前者让他成为一个非常喜欢冒险的球员,台球毕竟是圆的,他不可能每次都能赌赢。后者则让他在一些关键的比赛中彻底放弃抵抗,今年,这样的情况已经发生了两回。第一次是在全英赛对亨德利的1/4决赛,那一次,他干脆立刻退场。第二次是在斯诺克中国赛的半决赛中,他输给了世锦赛卫冕冠军多特。 场外: 奥沙利文在英国拥有众多球迷,世锦赛赛场几乎会成为"火箭"的主场。赔率也看好奥沙利文能够闯关成功。 对阵纪录: 丁俊晖 1胜 2负 2平 奥沙利文 03/04大师赛 丁俊晖 2-6 奥沙利文 05/06联盟杯 丁俊晖 3-3 奥沙利文 06/07北爱尔兰杯 丁俊晖 9-6 奥沙利文 06/07联盟杯 丁俊晖 3-3 奥沙利文 06/07大师赛决赛 丁俊晖 3-10 奥沙利文 (搜狐体育 李峥) (责任编辑:小丸子)',
                        '[点击图片进入下一页] picture 北京时间4月21日晚,英超第35轮全面开战。 红军利物浦坐镇安菲尔德球场迎战同在西北地区的蓝领球队维冈,结果他们依靠库伊特的两个进球2-0战胜对手。图为比赛中的精彩瞬间。 (责任编辑:harbuzi) 相关说吧说吧排行商机创业投资茶余饭后更多gt;gt;',
                        '搜狐体育讯 北京时间4月22日凌晨,2007年联合会杯女子网球(网球新闻,网球说吧)团体赛世界组四分之一决赛结束首日角逐。在第二场女单比赛中,中国姑娘彭帅在先胜一盘,且在第二盘获得赛点的有利情况下,被意大利猛女佩内塔追平总比分。 而在第三盘,彭帅扭伤大腿无奈退出比赛。这样,中国以总比分0-2落后卫冕冠军意大利。第二比赛日两队将进行女双比赛,中国只要再负一场就将出局。 由于首场单打比赛,孙甜甜(孙甜甜新闻,孙甜甜说吧)苦战三盘告负加宾,因此第二场单打比赛对中国队来说相当重要。彭帅如果告负,那中国晋级联合会杯四强的希望将变得很小。从实力上分析,佩内塔略强于彭帅,但年轻的彭帅今年状态还算不错,因此如果彭帅能顶住压力,那她绝对有机会在客场击败实力不俗的意大利名将! 第一盘比赛一开始,彭帅的表现相当不错,她在底线附近的正反手击球给佩内塔制造了很大的麻烦。数据显示,彭帅7次破发机会把握住3次,而佩内塔5次破发机会没有1次破发成功。这样,彭帅首盘请佩内塔吃了“鸭蛋”。第一盘,彭帅总共得到32分,而佩内塔表现不佳仅仅得到19分。 第二盘比赛开始后,两位选手在前三局各自破了对手一个发球局。局分上,双方战成2-2平!此后的比赛,两位选手又各自一次破发。前十局,双方战成5-5平。值得注意的是第十局,彭帅先后获得三个赛点,但她并未把握住!第11局,佩内塔抓住机会成功破发;而后这位意大利猛女顺利保住自己发球局。这样,佩内塔以7-5拿下第二盘,并将总比分追成1-1平,比赛进入决胜盘争夺。 被追平总比分的彭帅信心受到一定影响。第三盘首局她被破发;第二局,彭帅扭伤了大腿;而在第三局,佩内塔又一次成功破发。局分上,彭帅以0-3落后。此时,彭帅选择退出比赛。这样,佩内塔取得了比赛胜利,而意大利以总比分2-0领先中国,卫冕冠军进军今年联合会杯四强仅有一步之遥。 整场比赛耗时1小时55分钟。赛后的技术统计显示,彭帅没有发出1个ACE球,有2个双发失误;佩内塔发出1个ACE球,有6次双发失误。一发得分率佩内塔占据优势,而二发得分率彭帅略占上风。整场比赛,彭帅14次破发机会把握住5次,而佩内塔15次破发机会有5次成功破发。总得分上,两人均得到80分。(可乐) (责任编辑:小丸子)',
                        '搜狐体育讯 北京时间4月21日22:00,在英超联赛第35轮的一场焦点战役中,查尔顿在山谷球场迎战保级竞争对手“镰刀军团”谢菲尔德联队,目前以32分居联赛倒数第3的查尔顿比排在他们前面一位的谢联少了2分,两个保级竞争对手直接较量后的胜负,直接关系到了两队本赛季最终能否保级。中国球员郑智连续第6场代表球队首发,比赛中曾经有一次绝佳的得分机会未能把握住。最终,在这场被英国当地媒体形容为“自苏格兰独立战争以来,大不列颠最伟大的内战”中,查尔顿主场1-1被谢联逼平,保级前景更加不容乐观。 (责任编辑:Gedicht)',
                        '搜狐体育讯 0:0,重压之下的绿城表现出了一股强烈的求生本能,在昨晚与北京国安队的比赛中,阵容不整的绿城队最终逼平对手。从比分来说,这是一个能让俱乐部和全队接受的结果,从过程来说,是门将戚晓光拯救了全队,给了球队一个稍稍喘息的机会。 在没有丝毫迹象有情况下,上周六,老板发出话来,在接下来的两战中必须胜一场,作为俱乐部老总,完成任务也成了他的头号大事。沈强昨晚穿了一件红色T恤,这可能有一种祈求运气的成份,整场比赛,沈强一直脸色铁青,满头大汗。赛后,很多人都安慰他,平局可以接受,沈强这才舒了一口气。何至是沈强有压力,这场比赛也是主帅王政执教绿城四年来最艰难的时候,坊间不断地有消息传出,如果两战全败,王政肯定走人。尽管王政赛前在接受采访时称自己没有听到这方面的消息,但老板当天面对全队言辞激烈的话他不可能没有听到。 没有办法,惟一的办法就是自救!首发阵容中一下子出现了瓦格纳、唐晓菲、孙巍、蔡楚川四名“新人”,及兴华和吴伟也出现在18人大名单中。背水一战的绿城是憋足了劲,场面上,绿城丝毫不输给国安,不过比赛确实谈不上精彩,激烈的拼抢不能掩盖技战术水平的不足。直到第73分钟,全场最精彩的一次打门才上演,第一次首发出场的外援瓦格纳在甩开了防守队员后远射打在门柱上,瓦格纳的表现也让球迷为之一振,尽管身背“名货”之称,但瓦格纳还是体现了自己的价值。凭借这场比赛的表现,在堤科到来后,回家的可能并不一定瓦格纳。 弱旅出门神!比赛的最后的阶段就成了戚晓光的个人表演,补时阶段,他连续三次不可思议地扑出了对手的补射,保住了球队的一场平局。“他们的守门员太好了!我们的前锋在他面前显得毫无作为。”国安队主帅李章洙说。“比赛的最后了阶段,是戚晓光拯救了整个队伍,拯救了我!”王政说得很真诚。的确,如果不是戚晓光的出色发挥,迎接绿城的可能依旧是输球。 “两战必须拿下一场!”这是宋卫平的原话,战平国安队,绿城收获了一分,但这一分仅仅是一次喘息。事实上,这一分也把绿城推到了绝境,绿城的处境会更为之艰难,在接下来同申花的比赛中,绿城还得要全取三分才能完成老板交给的任务。申花队昨天败给大连实德队,下轮回到主场,朱峻是不会容忍球队输球的,而打上海球队,宋卫平往往会非常来劲。 或许,下场比赛才是真正决定绿城命运的时候!(西湖的鱼) (责任编辑:迎迎)',
                        '搜狐体育讯 斯图加特,对于拜仁(拜仁新闻,拜仁说吧)主帅希斯菲尔德而言肯定没有什么好感,因为3年前,他就是带队在这里1:3不敌马加特的斯图加特,同时也输掉了自己的帅位,那个赛季之后,马加特接掌了希斯菲尔德的教鞭。 如今,重掌拜仁教鞭的希斯菲尔德再次重返斯图加特,但90分钟的比赛之后,记分牌上0:2的比分再次深深的刺痛了老帅的心。 虽然这场失利对希斯菲尔德帅位没有任何影响,但是这场失利也很可能导致拜仁告别下赛季冠军联赛,这对连续10年参加这一欧洲最高水平赛事的拜仁而言,是不可想象的,甚至于对德国足球而言也是一场“地震”,没有了拜仁领军,德甲球队在冠军联赛的前景更加显得扑朔迷离。虽说还有理论上的夺取冠军联赛资格,可从本场比赛所反映出的两队明显不同的状态,也不由让人们为之捏一把汗:拜仁还有希望上演奇迹吗? 失利的深层次原因还在于拜仁缺乏领军人物,当卡恩的怒吼已经无法激发球员们的斗志时,拜仁需要一名新的中前场领袖,带领球队继续前进,但遗憾的是目前拜仁队中并没有这样的球员,无论是范博梅尔还是哈格里夫斯(哈格里夫斯新闻,哈格里夫斯说吧),无论是气质还是能力上,都难以胜任领袖角色。希斯菲尔德也唯有仰天长叹:“老虎”今在何方?(注:老虎:前拜仁队长、中场核心埃芬博格,1998～2002年期间效力拜仁) 从本场和斯图加特的比赛来看,拜仁的无核之痛问题暴露无遗,全场比赛,拜仁在前场失误频频,根本无法组织起有效的攻势,只能依靠马凯、范博梅尔等人的个人能力寻觅一两次远射机会,缺乏一个有效的中场组织者,才是导致拜仁本场比赛处于下风的深层次原因。没有一名球员,能够有效的衔接起拜仁中场和锋线,导致中场球员各自为战,前锋孤立无援,无法给斯图加特大门构成有效的威胁,最终酿成了失利的苦果。 或许只有引援才是拜仁的唯一出路,当迭戈拒绝拜仁之后,范德法特(范德法特新闻,范德法特说吧)成为了拜仁目前最合适的中场引援人选,这名汉堡队长已经经受了德甲两年的洗礼,其综合实力无庸置疑,而23岁的他也有着拜仁此前相中的巴斯图尔克和林肯等人所不具备的年龄优势,如果他能够到来,无疑将成为拜仁未来球队建设的重要组成部分。如今的拜仁,正呼唤新的中场领袖!(寒潭冷月) (责任编辑:Gedicht)',
                        '搜狐体育讯 北京时间4月22日,英超联赛进入第35轮争夺。曼联坐镇主场老特拉福德球场迎战米德尔斯堡。上半时比赛,曼联与米德尔斯堡1-1战平,理查森开场3分钟首开记录,维杜卡在补时阶段头球攻门扳平比分。 本场比赛是两家球会在正式比赛中的第118次交锋,此前曼联以58胜26平33负占据绝对优势,并且在近4次正赛中2胜2平保持不败。不过在联赛中的近6次交手曼联仅2次击败米德尔斯堡,并且米堡也是除切尔西外在英超联赛作客老特拉福德取得胜局最多(3次)的球队。此役,虽然维迪奇、加里-内维尔和萨哈继续因伤缺战,但里奥-费迪南德和奥谢两人均伤愈归队重返先发,老将吉格斯被准轮休开场时坐在替补席,理查森首发出现在前场左路。米堡方面,阿尔卡因腹股沟伤继续缺战,主教练索斯盖特重新将阵形变回到4-4-2,重返先发的维杜卡与雅库布在锋线搭档,这也意味着澳大利亚人距离个人英超第200场比赛仅有一步之遥。 上半时开场,曼联便积极进攻并很快有所收获。 2分52秒,斯科尔斯在中场右侧断球后长传身后球策动反击,鲁尼中路插上反越位成功,胸部卸球连续两控后面对施瓦泽向左侧一领晃过了澳大利亚门将,不过在鲁尼起脚射空门前,从左翼一直跟进的理查森在5米处“抢功”,左脚推射打入了个人在曼联的第11球,这既是第50次在英超联赛出场的理查森在近3场比赛中取得的第2球,也是曼联在近5场正赛中攻进的第15球。比分被改写后,两队在场上一度陷入胶着。第10分钟,雅库布外围的射门偏出右立柱。第16分钟,斯科尔斯在本方半场抬脚过高踢中罗申巴克头部,好在伤势不重。 第26分钟,鲁尼在35米外远射打飞。2分钟后,费迪南德带球前插在中场被人断球,雅库布衔枚急进19米外低射被快速补防的布朗一挡,皮球擦着左立柱偏出。第32分钟,C-罗纳尔多30米外的射门偏出近端底线。4分钟,C-罗纳尔多脚跟磕球摆脱被博阿滕直接扫倒,米堡队长也因此吃到黄牌。海因策主罚任意球在被人墙挡出后再射又中途碰人变线飞出底线。此后,C-罗纳尔多和鲁尼接连遭遇对方凶狠铲防,罗申巴克也因为撂倒鲁尼被黄牌警告。终场前,斯科尔斯因不满裁判判罚抱怨无谓吃到了本赛季个人第8张黄牌,与此同时费迪南德再次向场边示意自己感觉肌肉不适无法坚持。补时阶段,米德尔斯堡左侧阻止进攻,雅库布在大禁区前沿得球后分到左侧,唐宁传中,费迪南德无法起跳封前点,维杜卡抢在布朗之前5米处冲顶破门扳平比分。上半时比赛,曼联与米堡1-1战平进入半场休息。 曼联(4-4-2):1号范德萨;22号奥谢,5号费迪南德,6号布朗,4号海因策;7号C-罗纳尔多,18号斯科尔斯,16号卡里克,23号理查森;14号阿兰-史密斯,8号鲁尼 米德尔斯堡(4-4-2):1号施瓦泽;24号安德鲁-戴维斯,8号伍德盖特,12号波加特茨,33号安德鲁-泰勒;27号卡特莫尔,10号罗申巴克,7号博阿滕,19号唐宁;21号雅库布,9号维杜卡 (责任编辑:harbuzi)',
                    )),),
                'cellValSeparator' => '', // 每个值中元素分割符
            ),
            'speedresulta' => array( // 属性名称
                'cellNumber' => 10, // 属性有多少个值
                'metaValSeparator' => ' ', // 每个值之间分隔符
                'cellScope' => array( // 每个值由几个元素组成,按照数组先后设置每一个元素
                    array('float' => '0,20'), // 整形随机取两个数中的一个数字
                    array('float' => '0,20'), // 整形随机取两个数中的一个数字
                    array('float' => '0,20'), // 整形随机取两个数中的一个数字
                ),
                'cellValSeparator' => ' ', // 每个值中元素分割符
            ),
            'speedresultb' => array( // 属性名称
                'cellNumber' => 10, // 属性有多少个值
                'metaValSeparator' => ' ', // 每个值之间分隔符
                'cellScope' => array( // 每个值由几个元素组成,按照数组先后设置每一个元素
                    array('float' => '0,20'), // 整形随机取两个数中的一个数字
                    array('float' => '0,20'), // 整形随机取两个数中的一个数字
                    array('float' => '0,20'), // 整形随机取两个数中的一个数字
                ),
                'cellValSeparator' => ' ', // 每个值中元素分割符
            ),
            'maxblanklen' => array( // 属性名称
                'cellNumber' => 1, // 属性有多少个值
                'metaValSeparator' => '', // 每个值之间分隔符
                'cellScope' => array( // 每个值由几个元素组成,按照数组先后设置每一个元素
                    array('int' => '0,200'), // 整形随机取两个数中的一个数字
                ),
                'cellValSeparator' => '', // 每个值中元素分割符
            ),
            'maxstartblankpos' => array( // 属性名称
                'cellNumber' => 1, // 属性有多少个值
                'metaValSeparator' => '', // 每个值之间分隔符
                'cellScope' => array( // 每个值由几个元素组成,按照数组先后设置每一个元素
                    array('float' => '0,20'), // 整形随机取两个数中的一个数字
                ),
                'cellValSeparator' => '', // 每个值中元素分割符
            ),
            'robspeeda' => array( // 属性名称
                'cellNumber' => 1, // 属性有多少个值
                'metaValSeparator' => ' ', // 每个值之间分隔符
                'cellScope' => array( // 每个值由几个元素组成,按照数组先后设置每一个元素
                    array('float' => '0,20'), // 整形随机取两个数中的一个数字
                    array('float' => '0,20'), // 整形随机取两个数中的一个数字
                    array('float' => '0,20'), // 整形随机取两个数中的一个数字
                ),
                'cellValSeparator' => ' ', // 每个值中元素分割符
            ),
            'robspeedb' => array( // 属性名称
                'cellNumber' => 1, // 属性有多少个值
                'metaValSeparator' => ' ', // 每个值之间分隔符
                'cellScope' => array( // 每个值由几个元素组成,按照数组先后设置每一个元素
                    array('float' => '0,20'), // 整形随机取两个数中的一个数字
                    array('float' => '0,20'), // 整形随机取两个数中的一个数字
                    array('float' => '0,20'), // 整形随机取两个数中的一个数字
                ),
                'cellValSeparator' => ' ', // 每个值中元素分割符
            ),
            'mapfilepath' => array( // 属性名称
                'cellNumber' => 1, // 属性有多少个值
                'metaValSeparator' => '', // 每个值之间分隔符
                'cellScope' => array( // 每个值由几个元素组成,按照数组先后设置每一个元素
                    array('string' => array(
                        '/root',
                        '/usr',
                        '/etc',
                        '/home',)
                    ), // 字符串数组中，随机取一个值
                    array('string' => array(
                        '/bin',
                        '/dev',
                        '/lib',)
                    ), // 字符串数组中，随机取一个值
                    array('string' => array(
                        '/data1',
                        '/data2',
                        '/data3',)
                    ), // 字符串数组中，随机取一个值
                    array('string' => array('/')), // 字符串数组中，随机取一个值
                    array('string' => array(
                        'SH',
                        'WH',
                        'BJ',
                        'HK',
                        'ZJ',)
                    ),
                    array('string' => array('-')),
                    array('int' => '20,20'), // 整形随机取两个数中的一个数字
                    array('int' => '10,19'), // 整形随机取两个数中的一个数字
                    array('int' => '0,0'), // 整形随机取两个数中的一个数字
                    array('int' => '1,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,0'), // 整形随机取两个数中的一个数字
                    array('int' => '1,9'), // 整形随机取两个数中的一个数字
                    array('string' => array('.')),
                    array('int' => '0,0'), // 整形随机取两个数中的一个数字
                    array('int' => '0,0'), // 整形随机取两个数中的一个数字
                    array('int' => '1,9'), // 整形随机取两个数中的一个数字
                    array('string' => array('.')),
                    array('int' => '0,0'), // 整形随机取两个数中的一个数字
                    array('int' => '0,0'), // 整形随机取两个数中的一个数字
                    array('int' => '1,9'), // 整形随机取两个数中的一个数字
                    array('string' => array(
                        '.tgz',
                        '.zip',
                        '.tar',)
                    ),
                ),
                'cellValSeparator' => '', // 每个值中元素分割符
            ),
            'mapfilekey' => array( // 属性名称
                'cellNumber' => 1, // 属性有多少个值
                'metaValSeparator' => '', // 每个值之间分隔符
                'cellScope' => array( // 每个值由几个元素组成,按照数组先后设置每一个元素
                    array('string' => array(
                        '/root',
                        '/usr',
                        '/etc',
                        '/home',)
                    ), // 字符串数组中，随机取一个值
                    array('string' => array(
                        '/bin',
                        '/dev',
                        '/lib',)
                    ), // 字符串数组中，随机取一个值
                    array('string' => array(
                        '/data1',
                        '/data2',
                        '/data3',)
                    ), // 字符串数组中，随机取一个值
                    array('string' => array('/')), // 字符串数组中，随机取一个值
                    array('string' => array(
                        'SH',
                        'WH',
                        'BJ',
                        'HK',
                        'ZJ',)
                    ),
                    array('string' => array('-')),
                    array('int' => '20,20'), // 整形随机取两个数中的一个数字
                    array('int' => '10,19'), // 整形随机取两个数中的一个数字
                    array('int' => '0,0'), // 整形随机取两个数中的一个数字
                    array('int' => '1,9'), // 整形随机取两个数中的一个数字
                    array('int' => '0,0'), // 整形随机取两个数中的一个数字
                    array('int' => '1,9'), // 整形随机取两个数中的一个数字
                    array('string' => array('.')),
                    array('int' => '0,0'), // 整形随机取两个数中的一个数字
                    array('int' => '0,0'), // 整形随机取两个数中的一个数字
                    array('int' => '1,9'), // 整形随机取两个数中的一个数字
                    array('string' => array('.')),
                    array('int' => '0,0'), // 整形随机取两个数中的一个数字
                    array('int' => '0,0'), // 整形随机取两个数中的一个数字
                    array('int' => '1,9'), // 整形随机取两个数中的一个数字
                    array('string' => array(
                        '.tgz',
                        '.zip',
                        '.tar',)
                    ),
                ),
                'cellValSeparator' => '', // 每个值中元素分割符
            ),
            'emotiona' => array( // 属性名称
                'cellNumber' => 1, // 属性有多少个值
                'metaValSeparator' => '', // 每个值之间分隔符
                'cellScope' => array( // 每个值由几个元素组成,按照数组先后设置每一个元素
                    array('string' => array('NULL')), 
                ),
                'cellValSeparator' => '', // 每个值中元素分割符
            ),
            'emotionb' => array( // 属性名称
                'cellNumber' => 1, // 属性有多少个值
                'metaValSeparator' => '', // 每个值之间分隔符
                'cellScope' => array( // 每个值由几个元素组成,按照数组先后设置每一个元素
                    array('string' => array('NULL')), 
                ),
                'cellValSeparator' => '', // 每个值中元素分割符
            ),
        );
    }
}
                                   